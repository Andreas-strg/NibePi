[
    {
        "id": "ade2c7a9.e97ba8",
        "type": "tab",
        "label": "New",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7e884fc9.b6c45",
        "type": "tab",
        "label": "Tibber",
        "disabled": false,
        "info": ""
    },
    {
        "id": "dedc2653.57a3d8",
        "type": "tab",
        "label": "Inomhustempstyrning",
        "disabled": false,
        "info": ""
    },
    {
        "id": "41f52341.96686c",
        "type": "tab",
        "label": "SMHI",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a7a0164d.f58e58",
        "type": "tab",
        "label": "Airflow (Beta)",
        "disabled": true,
        "info": ""
    },
    {
        "id": "7f0122f1.22d60c",
        "type": "tab",
        "label": "Airflow",
        "disabled": false,
        "info": ""
    },
    {
        "id": "64327e50.8f365",
        "type": "subflow",
        "name": "Skrivläge",
        "info": "",
        "category": "output",
        "in": [
            {
                "x": 193,
                "y": 539,
                "wires": [
                    {
                        "id": "24d4f99f.449346"
                    }
                ]
            }
        ],
        "out": [],
        "icon": "node-red/alert.png"
    },
    {
        "id": "d7f6b34d.d13d6",
        "type": "mqtt-broker",
        "z": "",
        "name": "NibePi",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "6aa61182.b42ed",
        "type": "ui_tab",
        "z": 0,
        "name": "Inställningar",
        "icon": "settings",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "74cc47a5.9ee208",
        "type": "ui_tab",
        "z": 0,
        "name": "Prognosreglering",
        "icon": "wi-wu-sunny",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "72d88fa0.a760e",
        "type": "ui_tab",
        "z": 0,
        "name": "Inomhusreglering",
        "icon": "home",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "57a2c311.41401c",
        "type": "ui_tab",
        "z": 0,
        "name": "Lufthastighet",
        "icon": "wi-darksky-tornado",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ad3904c7.ceae48",
        "type": "ui_tab",
        "z": 0,
        "name": "Elprisreglering",
        "icon": "flash_on",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9efe2aac.f80568",
        "type": "ui_tab",
        "z": 0,
        "name": "List",
        "icon": "dashboard"
    },
    {
        "id": "d814a7db.5cdc38",
        "type": "ui_group",
        "z": 0,
        "name": "Uppdateringar",
        "tab": "6aa61182.b42ed",
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "4f8b35d1.5c8fec",
        "type": "ui_group",
        "z": 0,
        "name": "Registerhantering",
        "tab": "6aa61182.b42ed",
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "ed53104a.a7fac",
        "type": "ui_group",
        "z": 0,
        "name": "MQTT",
        "tab": "6aa61182.b42ed",
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "810e862f.c36438",
        "type": "ui_group",
        "z": 0,
        "name": "SMHI",
        "tab": "74cc47a5.9ee208",
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "a2cfe148.70708",
        "type": "ui_group",
        "z": "",
        "name": "Inomhusreglering",
        "tab": "72d88fa0.a760e",
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "ad7a33f3.24adf",
        "type": "ui_group",
        "z": 0,
        "name": "Automatisk lufthastighet",
        "tab": "57a2c311.41401c",
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "90803197.41c34",
        "type": "ui_group",
        "z": 0,
        "name": "Tibber",
        "tab": "ad3904c7.ceae48",
        "order": 4,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "53b18b65.7718c4",
        "type": "ui_group",
        "z": "",
        "name": "Temperaturgraf",
        "tab": "72d88fa0.a760e",
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "4a7ab836.172ae8",
        "type": "ui_group",
        "z": 0,
        "name": "Information",
        "tab": "6aa61182.b42ed",
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "89f97b1b.8278f8",
        "type": "ui_group",
        "z": 0,
        "name": "Loggning",
        "tab": "6aa61182.b42ed",
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "72d428b5.3b0eb8",
        "type": "ui_group",
        "z": 0,
        "name": "Default",
        "tab": "9efe2aac.f80568",
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "7e910a08.c6c984",
        "type": "ui_group",
        "z": 0,
        "name": "Graf",
        "tab": "74cc47a5.9ee208",
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "b561c5cd.249a58",
        "type": "ui_group",
        "z": 0,
        "name": "Inställningar Värme",
        "tab": "ad3904c7.ceae48",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "2e9c7d75.ee6312",
        "type": "ui_group",
        "z": 0,
        "name": "Inställningar Varmvatten",
        "tab": "ad3904c7.ceae48",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "f481a5f0.f9f1c8",
        "type": "ui_group",
        "z": 0,
        "name": "Inställningar",
        "tab": "ad3904c7.ceae48",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "e13feb70.134618",
        "type": "ui_base",
        "z": 0,
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#cd0101",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Nibe",
                "default": "#4B7930",
                "baseColor": "#a80202",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#a80202",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#a80202",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#f40303",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#000000",
                    "edited": true
                },
                "widget-backgroundColor": {
                    "value": "#a80202",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "NibePi",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "YYYY/MM/DD",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "d342c0ba.f2418",
        "type": "ui_group",
        "z": "",
        "name": "Solfaktor",
        "tab": "74cc47a5.9ee208",
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "455ba55e.e91e8c",
        "type": "ui_group",
        "z": "",
        "name": "Vindfaktor",
        "tab": "74cc47a5.9ee208",
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "54c90e3b.c2a5f",
        "type": "mqtt-broker",
        "z": "",
        "name": "NibePi",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "1409f0ed.f2d6cf",
        "type": "ui_group",
        "z": 0,
        "name": "Automatisk lufthastighet",
        "tab": "88b70b91.66f338",
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "88b70b91.66f338",
        "type": "ui_tab",
        "z": 0,
        "name": "Lufthastighet",
        "icon": "wi-darksky-tornado",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6142e2d0.82856c",
        "type": "inject",
        "z": "dedc2653.57a3d8",
        "name": "Intervall",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "x": 221,
        "y": 217,
        "wires": [
            [
                "70eee642.4248f8"
            ]
        ]
    },
    {
        "id": "24d4f99f.449346",
        "type": "exec",
        "z": "64327e50.8f365",
        "command": "sudo mount -o remount,rw /",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 582,
        "y": 539,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "671f1245.ab388c",
        "type": "inject",
        "z": "dedc2653.57a3d8",
        "name": "Starta",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 99,
        "y": 42,
        "wires": [
            [
                "5693ecc8.291564"
            ]
        ]
    },
    {
        "id": "5693ecc8.291564",
        "type": "subflow:64327e50.8f365",
        "z": "dedc2653.57a3d8",
        "name": "Skrivläge",
        "x": 235,
        "y": 42,
        "wires": []
    },
    {
        "id": "f81b565d.12b468",
        "type": "http request",
        "z": "41f52341.96686c",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 498,
        "y": 181,
        "wires": [
            [
                "c96b7e60.37965",
                "1eb0b7cf.d52a28"
            ]
        ]
    },
    {
        "id": "3090c4a5.dbcadc",
        "type": "inject",
        "z": "41f52341.96686c",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "x": 161,
        "y": 182,
        "wires": [
            [
                "1a39ce8.60f2732"
            ]
        ]
    },
    {
        "id": "6b4b813f.6bb24",
        "type": "inject",
        "z": "41f52341.96686c",
        "name": "Starta",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 85,
        "y": 42,
        "wires": [
            [
                "c9cb115f.178d"
            ]
        ]
    },
    {
        "id": "c9cb115f.178d",
        "type": "subflow:64327e50.8f365",
        "z": "41f52341.96686c",
        "name": "Skrivläge",
        "x": 221,
        "y": 42,
        "wires": []
    },
    {
        "id": "1a39ce8.60f2732",
        "type": "function",
        "z": "41f52341.96686c",
        "name": "",
        "func": "var config = global.get('config');\nif(config===undefined) return;\nif(config.plugins.smhi.active!==true) {\n    global.set('weatherSet',0);\n    return;\n}\nvar lon = config.plugins.smhi.lon;\nvar lat = config.plugins.smhi.lat;\nif(lon===\"\" || lat===\"\") return;\nvar url1 = \"https://opendata-download-metfcst.smhi.se/api/category/pmp3g/version/2/geotype/point/lon/\";\nvar url2 = \"/lat/\";\nvar url3 = \"/data.json\";\nmsg.url = url1+lon+url2+lat+url3;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 337,
        "y": 182,
        "wires": [
            [
                "f81b565d.12b468"
            ]
        ]
    },
    {
        "id": "68464a6e.039964",
        "type": "function",
        "z": "41f52341.96686c",
        "name": "",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nvar windSet = global.get('windSet');\nif(config===undefined) {\n    node.error('Prognosreglering',{topic:\"Prognosreglering\",payload:\"Saknar config fil.\"})\n    return;\n} if(data===undefined) {\n    node.error('Prognosreglering',{topic:\"Prognosreglering\",payload:\"Data har inte inkommit än.\"})\n    return;\n}\nvar hours = (config.plugins.smhi.hours-1);\nif(msg.topic==\"nibe/suncalc\") {\n    var sunrise = toTimestamp(msg.payload.sunrise);\n    var sunset = toTimestamp(msg.payload.sunset);\n    global.set('sun',{sunrise:sunrise,sunset:sunset});\n    return;\n}\n\nvar timeNow = Number((Date.now()/1000).toFixed());\nvar time = Number((Date.now()/1000).toFixed())+(config.plugins.smhi.hours*3600);\nvar sun = global.get('sun');\nif(time>sun.sunrise && time<sun.sunset) {\n    sun = true;\n} else {\n    sun = false;\n}\nvar temp = msg.payload.timeSeries[hours].parameters.find(temp => temp.name == \"t\");\nvar weather = msg.payload.timeSeries[hours].parameters.find(weather => weather.name == \"Wsymb2\");\n\nvar tempPredicted;\nif (temp!==undefined) {\ntempPredicted = temp.values[0];\n}\nvar weatherPredicted;\nif (weather!==undefined) {\nweatherPredicted = Number(weather.values[0]);\n}\nvar tempOutside = data[40004];\n\nvar tempInside = data.tempInside;\nvar heatCurve = data[47007];\nvar setOffset;\n//var factor;\nvar sunFactor = 0;\nif(tempOutside===undefined || heatCurve===undefined) {\n    node.error('Prognosreglering',{topic:\"Prognosreglering\",payload:\"Saknar värde från utomhusgivaren eller värmekurvan.\"});\n    return;\n}\ntempOutside = Number(tempOutside);\n//node.warn(tempOutside)\ntempInside = Number(tempInside);\nheatCurve = Number(heatCurve);\n//factor = heatCurve/10;\nif(weatherPredicted===1 && sun===true) {\n    sunFactor = config.plugins.smhi.clear;\n} else if(weatherPredicted===2 && sun===true) {\n    sunFactor = config.plugins.smhi.mostly_clear;\n} else if(weatherPredicted===3 && sun===true) {\n    sunFactor = config.plugins.smhi.half_clear;\n}\nif(windSet!==undefined) {\n    tempPredicted = windSet;\n}\nif(config.plugins.smhi.sun_active===undefined || config.plugins.smhi.sun_active===false) sunFactor = 0;\nsetOffset = Number(((tempOutside-tempPredicted-sunFactor)*(heatCurve*1.2/10)/((heatCurve/10)+1)).toFixed(2));\n\nnode.send([null,null,{debug:\"Jämför temperaturer...\"}]);\nnode.send([null,null,{debug:\"Utomhus: \"+tempOutside+\"°C, Prognos \"+config.plugins.smhi.hours+\"h: \"+tempPredicted+\"°C, Vädertyp: \"+weatherPredicted+\", Värmekurva: \"+heatCurve+\", Kurvlutning efter prognos: \"+setOffset+\"°C\"}]);\n\nglobal.set('weatherSet',Number(setOffset));\n\nnode.send({topic:\"Utomhustemp\",payload:tempOutside});\nnode.send({topic:\"Inomhustemp\",payload:tempInside});\nnode.send({topic:\"Prognos (Nu) \"+config.plugins.smhi.hours+\"h\",payload:tempPredicted});\nnode.send([{topic:\"Prognos \"+config.plugins.smhi.hours+\"h\",payload:tempPredicted,timestamp:Date.now()+(config.plugins.smhi.hours*3600000)},{topic:\"SMHI Utomhustemp\",payload:tempPredicted,delay:(config.plugins.smhi.hours*3600000)}]);\nnode.send({topic:\"Kurvjustering\",payload:setOffset});\n\nfunction toTimestamp(strDate){\n var datum = Date.parse(strDate);\n return Number((datum/1000).toFixed());\n}\n",
        "outputs": 3,
        "noerr": 0,
        "x": 799,
        "y": 308,
        "wires": [
            [
                "dcf60545.af3af8",
                "fc7820a4.43483",
                "5cbf0d40.4f64a4"
            ],
            [
                "d90bebab.38de88"
            ],
            [
                "e99ea75d.088aa8"
            ]
        ]
    },
    {
        "id": "c96b7e60.37965",
        "type": "function",
        "z": "41f52341.96686c",
        "name": "",
        "func": "var config = global.get('config');\nif(config===undefined) { return; }\nif(msg.statusCode!==200) {\n    global.set('weatherSet',0);\n    node.error('Prognosreglering',{topic:\"Prognosreglering\",payload:\"Får ej kontakt med SMHI servern. Ställer in reglering till 0.\"})\n    return;\n}\nvar weather = msg.payload.timeSeries;\nvar tempMin = 127;\nvar tempMax = -127;\nvar tempAvg = 0;\nvar hours = 12;\nfor( var i = 0; i < hours; i++){\n    var temp = weather[i].parameters.find(temp => temp.name == \"t\");\n    if (temp!==undefined) {\n        if(temp.values[0]<tempMin) {\n            tempMin = temp.values[0];\n        }\n        if(temp.values[0]>tempMax) {\n            tempMax = temp.values[0];\n        }\n        tempAvg = tempAvg+temp.values[0];\n    }\n}\ntempAvg = (tempAvg/hours).toFixed(1);\nnode.send([null,{debug:\"Lägsta temperatur inom \"+hours+\"h: \"+tempMin}]);\nnode.send([null,{debug:\"Högsta temperatur inom \"+hours+\"h: \"+tempMax}]);\nnode.send([null,{debug:\"Medeltemperatur inom \"+hours+\"h: \"+tempAvg}]);\nvar weatherData = {\n    min:tempMin,\n    max:tempMax,\n    avg:Number(tempAvg),\n    hours:hours\n}\nglobal.set('weatherData',weatherData);\nnode.send([null,{debug:weatherData}]);\n\nif(config.plugins.smhi.active!==true) {\n    global.set('weatherSet',0);\n    node.send([null,{debug:\"Funktion avstängd.\"}]);\n    return;\n}\nreturn msg;\n",
        "outputs": 2,
        "noerr": 0,
        "x": 736,
        "y": 434,
        "wires": [
            [
                "68464a6e.039964",
                "e39f5451.3a0378"
            ],
            [
                "e99ea75d.088aa8"
            ]
        ]
    },
    {
        "id": "e99ea75d.088aa8",
        "type": "debug",
        "z": "41f52341.96686c",
        "name": "SMHI Styrning: Debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "debug",
        "x": 1206,
        "y": 448,
        "wires": []
    },
    {
        "id": "dcf60545.af3af8",
        "type": "debug",
        "z": "41f52341.96686c",
        "name": "Utgående",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1138,
        "y": 294,
        "wires": []
    },
    {
        "id": "5cbf0d40.4f64a4",
        "type": "switch",
        "z": "41f52341.96686c",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Utomhustemp",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 970,
        "y": 200,
        "wires": [
            [
                "2d6fec7d.944184"
            ]
        ]
    },
    {
        "id": "2d6fec7d.944184",
        "type": "function",
        "z": "41f52341.96686c",
        "name": "",
        "func": "var bt1 = context.get('bt1');\nvar smhi = context.get('smhi');\nvar array = context.get('smhi_success')||[];\nif(msg.topic==\"Utomhustemp\") {\n    bt1 = msg.payload;\n} else if(msg.topic==\"SMHI Utomhustemp\") {\n    smhi = msg.payload;\n}\nif(bt1!==undefined && smhi!==undefined) {\n    array.unshift({\"bt1\":bt1,\"smhi\":smhi});\n    var tmp1 = 0;\n    var tmp2 = 0;\n    for (i = 0; i < array.length; i=i+1) {\n    tmp1 = tmp1+array[i].bt1;\n    tmp2 = tmp2+array[i].smhi;\n    }\n    var message = tmp2/tmp1;\n    node.send({topic:\"SMHI Träffsäkerhet\",payload:message.toFixed(2)});\n    bt1 = undefined;\n    smhi = undefined;\n}\nif(array.length>144) { var lastMsg = array.pop; }\ncontext.set('bt1',bt1);\ncontext.set('smhi',smhi);\ncontext.set('smhi_success',array);\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1090,
        "y": 140,
        "wires": [
            [
                "fef3df9b.58651",
                "efe85654.54bba8"
            ]
        ]
    },
    {
        "id": "fef3df9b.58651",
        "type": "debug",
        "z": "41f52341.96686c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1260,
        "y": 98,
        "wires": []
    },
    {
        "id": "b42ae080.74e16",
        "type": "function",
        "z": "7e884fc9.b6c45",
        "name": "",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined || data===undefined) { return; }\nvar time = Date.now();\nvar lastSent = context.get('last')||0;\nvar mode = msg.payload;\nvar tempInside = data[40033];\nif(data.indoorSensor!==undefined && config.plugins.indoor.nibesensor!==undefined && config.plugins.indoor.nibesensor===false) {\n    tempInside = data.indoorSensor;\n}\nvar hotwater = data[47041]\nvar tempOutside = data[40004];\nvar heatCurve = data[47007];\nvar setTemp = data[47398];\nvar dM = data[43005];\nvar dMstart = data[47206];\n//var time = Number(getTime());\nif(tempInside===undefined || tempOutside===undefined) {\n    return;\n}\n\n\ntempInside = Number(tempInside);\ntempOutside = Number(tempOutside);\nheatCurve = Number(heatCurve);\nsetTemp = Number(setTemp);\ndMstart = Number(dMstart);\nif(mode===\"super_low\") { // Super lågt pris\n    if(config.plugins.tibber.hotwater_active===true) {\n        if(hotwater!=config.plugins.tibber.hotwater_price_superlow) {\n            node.send({topic:config.defaultTopic+\"47041/set\",payload:config.plugins.tibber.hotwater_price_superlow});\n        }\n    }\nif(tempInside<=(setTemp-0.5)) {\n    global.set('priceSet',config.plugins.tibber.adjust_superlow);\n} else {\n    global.set('priceSet',0);\n}\n} else if (mode==\"low\") { // Lågt pris\nif(config.plugins.tibber.hotwater_active===true) {\n    if(hotwater!=config.plugins.tibber.hotwater_price_low) {\n        node.send({topic:config.defaultTopic+\"47041/set\",payload:config.plugins.tibber.hotwater_price_low});\n    }\n}\nif(tempInside<=(setTemp-0.5)) {\n    global.set('priceSet',config.plugins.tibber.adjust_low);\n} else {\n    global.set('priceSet',0);\n}\n} else if (mode==\"normal\") { //Normalt\nif(config.plugins.tibber.hotwater_active===true) {\n    if(hotwater!=config.plugins.tibber.hotwater_price_normal) {\n        node.send({topic:config.defaultTopic+\"47041/set\",payload:config.plugins.tibber.hotwater_price_normal});\n    }\n}\n    global.set('priceSet',0);\n/*\nvar hW1 = config.hotWaterPriority1.split(\"-\");\nvar hW2 = config.hotWaterPriority2.split(\"-\");\nnode.send([null,null,{debug:\"Klockan är: \"+time+\", Varmvatten period 1: \"+hW1[0]+\"-\"+hW1[1]+\", Varmvatten period 2: \"+hW2[0]+\"-\"+hW2[1]}]);\n    if((time>=Number(hW1[0]) && time <=Number(hW1[1])) || (time>=Number(hW2[0]) && time <=Number(hW2[1]))) {\n        node.send([null,null,{debug:\"Normalt elpris. Prioriterad varmvatten period.\"}]);\n        node.send({topic:config.defaultTopic+\"47041/set\",payload:\"1\"});\n    } else {\n        node.send({topic:config.defaultTopic+\"47041/set\",payload:\"0\"});\n        node.send([null,null,{debug:\"Normalt elpris. Ej prioriterad varmvatten period.\"}]);\n    }*/\n} else if (mode==\"high\") { // Dyrt pris\nif(config.plugins.tibber.hotwater_active===true) {\n    if(hotwater!=config.plugins.tibber.hotwater_price_high) {\n        node.send({topic:config.defaultTopic+\"47041/set\",payload:config.plugins.tibber.hotwater_price_high});\n    }\n}\nif(tempInside>=(setTemp-0.5)) {\n    if(dM<(dMstart-50) && time>=lastSent) { // Får endast sända gradminuter en gång var 55e minut.\n        node.send({topic:config.defaultTopic+\"43005/set\",payload:0});\n        context.set('last',time+3300000);\n    }\n    global.set('priceSet',config.plugins.tibber.adjust_high);\n} else {\n    global.set('priceSet',0);\n}\n}\n\n\nfunction getTime() {\nvar now     = new Date(); \nvar hour    = now.getHours();\nvar minute  = now.getMinutes();\n\nif(hour.toString().length == 1) {\n    hour = '0'+hour;\n}\nif(minute.toString().length == 1) {\n    minute = '0'+minute;\n}\nvar result = hour.toString()+minute.toString();\nreturn result;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 988,
        "y": 126,
        "wires": [
            [
                "a8f3ce3d.6e11f",
                "b7e82bb8.f034f8"
            ]
        ]
    },
    {
        "id": "a8f3ce3d.6e11f",
        "type": "debug",
        "z": "7e884fc9.b6c45",
        "name": "Utgående",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1243,
        "y": 126,
        "wires": []
    },
    {
        "id": "9c213bd7.0504d8",
        "type": "inject",
        "z": "7e884fc9.b6c45",
        "name": "",
        "topic": "",
        "payload": "low",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 918,
        "y": 217,
        "wires": [
            [
                "b42ae080.74e16"
            ]
        ]
    },
    {
        "id": "91fc2c12.52fc9",
        "type": "inject",
        "z": "7e884fc9.b6c45",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "x": 182,
        "y": 196,
        "wires": [
            [
                "c7131a.4e2b3ce8"
            ]
        ]
    },
    {
        "id": "1d9c0012.d1f53",
        "type": "http request",
        "z": "7e884fc9.b6c45",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": false,
        "url": "https://api.tibber.com/v1-beta/gql",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 582,
        "y": 136,
        "wires": [
            [
                "b93d065.261edf8",
                "f4f542f1.cf26c"
            ]
        ]
    },
    {
        "id": "c7131a.4e2b3ce8",
        "type": "function",
        "z": "7e884fc9.b6c45",
        "name": "",
        "func": "var config = global.get('config');\nif(config===undefined) return;\nif(config.plugins.tibber===undefined) { return; }\nif(config.plugins.tibber.active===undefined || config.plugins.tibber.active===false) {\n    global.set('priceSet',0);\n    return;\n}\nvar token = config.plugins.tibber.token;\nif(config.plugins.tibber.token===undefined || config.plugins.tibber.token===\"\") return;\nmsg.headers = {\n    'Authorization': `Bearer ${token}`,\n    'Content-Type': 'application/json'\n};\n\nmsg.payload = { \"query\": \"{\\\n  viewer {\\\n    homes {\\\n      currentSubscription {\\\n        status\\\n        priceInfo {\\\n          today{\\\n            startsAt\\\n            total\\\n            energy\\\n            level\\\n            tax\\\n          }\\\n          current{\\\n            total\\\n            energy\\\n            level\\\n            tax\\\n            startsAt\\\n          }\\\n          tomorrow {\\\n            startsAt\\\n            total\\\n            level\\\n            energy\\\n            tax\\\n          }\\\n        }\\\n      }\\\n      consumption(resolution: HOURLY, last: 48) {\\\n        nodes {\\\n          from\\\n          to\\\n          consumption\\\n          consumptionUnit\\\n        }\\\n      }\\\n    }\\\n  }\\\n}\" };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 382,
        "y": 136,
        "wires": [
            [
                "1d9c0012.d1f53"
            ]
        ]
    },
    {
        "id": "1eb0b7cf.d52a28",
        "type": "debug",
        "z": "41f52341.96686c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 670,
        "y": 180,
        "wires": []
    },
    {
        "id": "3e0c18fc.202108",
        "type": "inject",
        "z": "7e884fc9.b6c45",
        "name": "Starta",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 120,
        "y": 35,
        "wires": [
            [
                "a8f64026.b3645"
            ]
        ]
    },
    {
        "id": "a8f64026.b3645",
        "type": "subflow:64327e50.8f365",
        "z": "7e884fc9.b6c45",
        "name": "Skrivläge",
        "x": 256,
        "y": 35,
        "wires": []
    },
    {
        "id": "d9222c3c.131db",
        "type": "inject",
        "z": "7e884fc9.b6c45",
        "name": "",
        "topic": "",
        "payload": "high",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 918,
        "y": 175,
        "wires": [
            [
                "b42ae080.74e16"
            ]
        ]
    },
    {
        "id": "70eee642.4248f8",
        "type": "function",
        "z": "dedc2653.57a3d8",
        "name": "",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined || data===undefined) { return; }\nif(config.plugins.indoor===undefined || config.plugins.indoor.active===false) {\n    global.set('indoorSet',0);\n    return;\n}\nvar tempInside;\nvar indoorSensor = data[40033];\nvar mqttSensor = data.mqttSensor;\nvar exhaustSensor = data[40025];\nvar tempOutside = data[40004];\nvar setTemp = data[47398];\nvar factor = data[47402]||0;\nif(indoorSensor===undefined && mqttSensor===undefined && exhaustSensor===undefined) {\n    global.set('indoorSet',0);\n    node.send({topic:\"Kurvjustering\",payload:0});\n    node.send({topic:\"Utomhustemp\",payload:tempOutside});\n    node.error('Inomhusreglering',{topic:\"Inomhusreglering\",payload:\"Saknar värde från givare.\"})\n    return;\n} else {\n    var counter = 0;\n    indoorSensor = Number(indoorSensor)||0;\n    mqttSensor = Number(mqttSensor)||0;\n    exhaustSensor = Number(exhaustSensor)||0;\n    if(config.plugins.indoor.nibesensor===undefined || config.plugins.indoor.nibesensor===false) { indoorSensor = 0; }\n    if(config.plugins.indoor.mqttsensor_value===undefined || config.plugins.indoor.mqttsensor_value===false) { mqttSensor = 0; }\n    if(config.plugins.indoor.exhaustsensor===undefined || config.plugins.indoor.exhaustsensor===false) { exhaustSensor = 0; }\n    if(indoorSensor!==0) { counter++; }\n    if(mqttSensor!==0) { counter++; }\n    if(exhaustSensor!==0) { counter++; }\n    tempInside = Number(((indoorSensor+mqttSensor+exhaustSensor)/counter).toFixed(1));\n\n    if(isNaN(tempInside)) {\n        global.set('indoorSet',0);\n        node.send({topic:\"Kurvjustering\",payload:0});\n        node.send({topic:\"Utomhustemp\",payload:tempOutside});\n        node.error('Inomhusreglering',{topic:\"Inomhusreglering\",payload:\"Saknar värde från givare.\"})\n        data.tempInside = undefined;\n        global.set('data',data);\n        return;\n    } else {\n        data.tempInside = tempInside;\n        global.set('data',data);\n    }\n}\n\nvar time = getTime();\nvar weather = global.get('weatherData');\nif(tempOutside===undefined) {\n    global.set('indoorSet',0);\n    node.send({topic:\"Kurvjustering\",payload:0});\n    node.warn('Inomhusreglering: Saknar värden från givare')\n    return;\n}\nsetTemp = Number(setTemp);\ntempOutside = Number(tempOutside);\nfactor = Number(factor);\n\nnode.send({topic:\"Inomhustemp\",payload:tempInside});\nnode.send({topic:\"Utomhustemp\",payload:tempOutside});\nif(tempInside>(setTemp+0.5)) {\n    var indoorSet = Number((((setTemp+0.5)-tempInside)*factor).toFixed(1));\n    if(indoorSet<-10) { indoorSet = -10; }\n    global.set('indoorSet',indoorSet);\n    node.send({topic:\"Kurvjustering\",payload:indoorSet});\n    node.send([null,null,{debug:\"Inomhustemp(\"+tempInside+\") för hög, justering: \"+indoorSet+\"°C\"}]);\n} else if(tempInside<setTemp) {\n   let indoorSet = Number(((setTemp-tempInside)*factor).toFixed(1));\n    if(indoorSet>10) { indoorSet = 10; }\n    global.set('indoorSet',indoorSet);\n    node.send({topic:\"Kurvjustering\",payload:indoorSet});\n    node.send([null,null,{debug:\"Inomhustemp(\"+tempInside+\") för låg, justering: \"+indoorSet+\"°C\"}]);\n} else {\n    let indoorSet = 0;\n    if(indoorSet>10) { indoorSet = 10; }\n    global.set('indoorSet',indoorSet);\n    node.send({topic:\"Kurvjustering\",payload:indoorSet});\n    node.send([null,null,{debug:\"Inomhustemp(\"+tempInside+\") lagom, ingen justering: \"+indoorSet+\"°C\"}]);\n}\nnode.send([null,null,{debug:\"Jämför temperaturer...\"}]);\n\n\nfunction getTime() {\nvar now     = new Date(); \nvar hour    = now.getHours();\nvar minute  = now.getMinutes();\n\nif(hour.toString().length == 1) {\n    hour = '0'+hour;\n}\nif(minute.toString().length == 1) {\n    minute = '0'+minute;\n}\nvar result = hour.toString()+minute.toString();\nreturn Number(result);\n}",
        "outputs": 3,
        "noerr": 0,
        "x": 470,
        "y": 266,
        "wires": [
            [
                "dbdce37e.8b558"
            ],
            [
                "2aa38b4f.48fad4"
            ],
            []
        ]
    },
    {
        "id": "2aa38b4f.48fad4",
        "type": "mqtt out",
        "z": "dedc2653.57a3d8",
        "name": "",
        "topic": "",
        "qos": "2",
        "retain": "",
        "broker": "d7f6b34d.d13d6",
        "x": 870,
        "y": 180,
        "wires": []
    },
    {
        "id": "b7e82bb8.f034f8",
        "type": "mqtt out",
        "z": "7e884fc9.b6c45",
        "name": "NibePi",
        "topic": "",
        "qos": "2",
        "retain": "false",
        "broker": "d7f6b34d.d13d6",
        "x": 1114,
        "y": 126,
        "wires": []
    },
    {
        "id": "b67355f5.eda608",
        "type": "mqtt in",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "nibe/register/#",
        "qos": "2",
        "broker": "d7f6b34d.d13d6",
        "x": 147,
        "y": 189,
        "wires": [
            [
                "b90a2cad.51aaf"
            ]
        ]
    },
    {
        "id": "b90a2cad.51aaf",
        "type": "debug",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 364,
        "y": 175,
        "wires": []
    },
    {
        "id": "1e33929a.5d641d",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "func": "var configTopic = \"nibe/config\";\nvar registerTopic = \"nibe/register\";\nvar config = global.get('config');\nvar register = global.get('register');\nvar data = global.get('data')||{};\nif(msg.topic==configTopic) {\n    config = JSON.parse(msg.payload);\n    global.set('config',config);\n    node.send({debug:config});\n} else if(msg.topic==registerTopic) {\n    register = JSON.parse(msg.payload);\n    global.set('register',register);\n    node.send({debug:\"Register set\"});\n}\nif(config===undefined) { return; }\nif(config.defaultTopic!==undefined) {\n    var topic = msg.topic.split(\"/\");\n    var topicConfig = config.defaultTopic.split(\"/\");\n    if(topic[0]==topicConfig[0] && topic[1]==topicConfig[1]) {\n        if(data!==undefined) {\n            data[topic[2]] = String(msg.payload);\n            global.set('data',data)\n            node.send({topic:topic[2],payload:msg.payload});\n        }\n        \n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 267,
        "y": 133,
        "wires": [
            [
                "4455ea2b.ac5ff4"
            ]
        ]
    },
    {
        "id": "6e961ad9.7732f4",
        "type": "mqtt in",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "#",
        "qos": "2",
        "broker": "d7f6b34d.d13d6",
        "x": 119,
        "y": 133,
        "wires": [
            [
                "1e33929a.5d641d"
            ]
        ]
    },
    {
        "id": "4455ea2b.ac5ff4",
        "type": "debug",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 441,
        "y": 133,
        "wires": []
    },
    {
        "id": "cfe77047.38f09",
        "type": "mqtt in",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "nibe/config",
        "qos": "2",
        "broker": "d7f6b34d.d13d6",
        "x": 95,
        "y": 371,
        "wires": [
            [
                "ea88ea0.02bd218"
            ]
        ]
    },
    {
        "id": "ea88ea0.02bd218",
        "type": "json",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 288,
        "y": 364,
        "wires": [
            [
                "bd9bd75.b78e028",
                "bac692c0.11e84",
                "a7a2f16e.8deca",
                "db862c6c.0430d",
                "c8a189c9.71c2b8",
                "4c5fe2e7.3d8a7c",
                "2a75b220.bceb6e",
                "a71fc0a0.cbad4",
                "3cf2e9a5.ebb2c6"
            ]
        ]
    },
    {
        "id": "1adfd7ff.d67468",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined || data===undefined) return;\nif(msg.topic!=\"mqtt\"){\nif(config.plugins[msg.topic]===undefined) {\n    config.plugins[msg.topic] = {};\n}\n}\nif(msg.topic==\"mqtt\") {\n    config[msg.topic].active = msg.payload;\n} else {\n    config.plugins[msg.topic].active = msg.payload;\n}\n\nmsg.topic = \"nibe/config/set\"\nmsg.payload = JSON.stringify(config);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1009,
        "y": 406,
        "wires": [
            [
                "7549880b.1596a8"
            ]
        ]
    },
    {
        "id": "21dde779.a6ecf8",
        "type": "inject",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "nibe/config/get",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "x": 166,
        "y": 35,
        "wires": [
            [
                "2dd86788.1e59d8"
            ]
        ]
    },
    {
        "id": "f86a78bd.8e2088",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "func": "var config = global.get('config');\nif(config===undefined) return;\nif(config[msg.topic]===undefined) {\n    config[msg.topic] = {};\n}\nvar value = msg.payload;\nvar check = value.endsWith(\"/\");\nif(check===false) {\n    value = value+\"/\";\n}\nconfig[msg.topic] = value;\nmsg.topic = \"nibe/config/set\"\nmsg.payload = JSON.stringify(config);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 743,
        "y": 700,
        "wires": [
            [
                "89600b26.de1618"
            ]
        ]
    },
    {
        "id": "bac692c0.11e84",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.defaultTopic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 437,
        "y": 581,
        "wires": [
            [
                "2fde2d1c.371fe2"
            ]
        ]
    },
    {
        "id": "bd9bd75.b78e028",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "Remove Registers",
        "func": "var value = msg.payload.registers;\nif(value===undefined) { return; }\nvar newArr = [];\nfor( var i = 0; i < value.length; i++){\n    var word = value[i].register+\": \"+value[i].titel;\n    newArr.push({[word]:value[i].register});\n}\nmsg = {\n    options:newArr\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 552,
        "y": 826,
        "wires": [
            [
                "1d13a496.42fbeb"
            ]
        ]
    },
    {
        "id": "d8c999e2.2eeb08",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "func": "var config = global.get('config');\nif(config===undefined) { return; }\nif(config.defaultTopic===undefined) { return; }\nmsg.topic = \"nibe/register/\"+msg.topic;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 946,
        "y": 833,
        "wires": [
            [
                "d8bcd8d9.023928",
                "6f1a350c.cf66cc"
            ]
        ]
    },
    {
        "id": "d8bcd8d9.023928",
        "type": "debug",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1138,
        "y": 787,
        "wires": []
    },
    {
        "id": "be4833a.6b1c6d",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "Check Heatoffset",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined || data===undefined) return;\nvar indoorSet = global.get('indoorSet')||0;\nvar priceSet = global.get('priceSet')||0;\nvar weatherSet = global.get('weatherSet')||0;\nvar heatOffset = data[47011];\nif(heatOffset===undefined) return;\nheatOffset = Number(heatOffset);\nvar dataSet = (indoorSet+priceSet+weatherSet);\nif(heatOffset!==(dataSet)) {\n    if(dataSet>10) { dataSet = 10; }\n    if(dataSet<-10) { dataSet = -10; }\n    if(dataSet>(heatOffset+0.75)) {\n        node.send({topic:config.defaultTopic+\"47011/set\",payload:heatOffset+1});\n    } else if(dataSet<(heatOffset-0.75)) {\n        node.send({topic:config.defaultTopic+\"47011/set\",payload:heatOffset-1});\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1042,
        "y": 168,
        "wires": [
            [
                "45623e44.ead91",
                "ec40492b.624e98"
            ]
        ]
    },
    {
        "id": "736c491e.4533e8",
        "type": "inject",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 843,
        "y": 168,
        "wires": [
            [
                "be4833a.6b1c6d"
            ]
        ]
    },
    {
        "id": "45623e44.ead91",
        "type": "debug",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1204,
        "y": 105,
        "wires": []
    },
    {
        "id": "374fb1bb.45aace",
        "type": "mqtt in",
        "z": "7e884fc9.b6c45",
        "name": "",
        "topic": "nibe/config",
        "qos": "2",
        "broker": "d7f6b34d.d13d6",
        "x": 193,
        "y": 147,
        "wires": [
            [
                "c7131a.4e2b3ce8"
            ]
        ]
    },
    {
        "id": "50a80778.c04868",
        "type": "mqtt in",
        "z": "dedc2653.57a3d8",
        "name": "",
        "topic": "nibe/config",
        "qos": "2",
        "broker": "d7f6b34d.d13d6",
        "x": 221,
        "y": 259,
        "wires": [
            [
                "70eee642.4248f8"
            ]
        ]
    },
    {
        "id": "5e826a81.63cd44",
        "type": "mqtt in",
        "z": "41f52341.96686c",
        "name": "",
        "topic": "nibe/config",
        "qos": "2",
        "broker": "d7f6b34d.d13d6",
        "x": 158,
        "y": 266,
        "wires": [
            [
                "1a39ce8.60f2732"
            ]
        ]
    },
    {
        "id": "e145733f.34baa",
        "type": "delay",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 858,
        "y": 119,
        "wires": [
            [
                "be4833a.6b1c6d"
            ]
        ]
    },
    {
        "id": "13b35cd8.69bf23",
        "type": "function",
        "z": "a7a0164d.f58e58",
        "name": "",
        "func": "var config = global.get('config');\nif(config===undefined) { return; }\nif(config.plugins.airflow===undefined || config.plugins.airflow.active===false) {\n    return;\n}\n\nif(msg.topic==(config.defaultTopic+\"40050\")) {\nvar set_normal = config.plugins.airflow.setpoint_normal;\nvar set_low = config.plugins.airflow.setpoint_low;\nvar data = global.get('data');\nif(data[40050]===undefined || data[47265]===undefined || data[40026]===undefined || data[45001]===undefined) { return; }\nvar flow = Number(data[40050]);\nvar alarm = data[45001];\nvar fan = Number(data[47265]);\nvar temp = Number(data[40026]);\nvar comp_set = Number(data[43182]);\nvar saved_speed = context.get('saved')||fan;\nvar low = context.get('low')||false;\nif(alarm==\"Avfrostning\" || alarm==\"183\") {\n    // Dont regulate when defrosting\n    return;\n} else if(temp<0) {\n    // Dont regulate when the vented air is below 0\n    return;\n}\nvar setpoint = flow;\nif(config.plugins.airflow.setpoint_low_active===true && comp_set<1) {\n    if(low===false) {\n        context.set('saved',fan);\n        low = true;\n        context.set('low',low);\n    }\n    if(config.plugins.airflow.co2_active!==undefined && config.plugins.airflow.co2_active===true) {\n        if(data.co2_sensor!==undefined) {\n            let co2 = Number(data.co2_sensor);\n            if(co2<800) {\n                setpoint = set_low;\n            } else {\n                setpoint = set_normal;\n            }\n        } else {\n            setpoint = set_normal;\n            node.error('CO2 mätning',{topic:\"CO2 mätning\",payload:\"Saknar värde från CO2 givare.\"})\n        }\n    } else {\n        setpoint = set_low;\n    }\n    \n} else {\n    if(low===true) {\n        fan = saved_speed;\n        low = false;\n        context.set('low',low);\n        node.send({topic:config.defaultTopic+47265+\"/set\",payload:fan});\n        return;\n    }\n    setpoint = set_normal;\n}\nnode.send([null,{topic:\"Börvärde\",payload:setpoint}]);\nif(flow>(setpoint+10)) {\n    node.send({topic:config.defaultTopic+47265+\"/set\",payload:fan-1});\n} else if(flow<(setpoint-10)) {\n    node.send({topic:config.defaultTopic+47265+\"/set\",payload:fan+1});\n} else {\n    // Normal flow\n}\n\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 441,
        "y": 266,
        "wires": [
            [
                "3d540f9e.34644",
                "cf52d634.bf76f8"
            ],
            [
                "d1eba932.145588"
            ]
        ]
    },
    {
        "id": "cf52d634.bf76f8",
        "type": "mqtt out",
        "z": "a7a0164d.f58e58",
        "name": "",
        "topic": "",
        "qos": "2",
        "retain": "false",
        "broker": "d7f6b34d.d13d6",
        "x": 610,
        "y": 266,
        "wires": []
    },
    {
        "id": "3d540f9e.34644",
        "type": "debug",
        "z": "a7a0164d.f58e58",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 630,
        "y": 217,
        "wires": []
    },
    {
        "id": "5d9895ac.e08dbc",
        "type": "mqtt in",
        "z": "a7a0164d.f58e58",
        "name": "",
        "topic": "#",
        "qos": "2",
        "datatype": "auto",
        "broker": "d7f6b34d.d13d6",
        "x": 274,
        "y": 224,
        "wires": [
            [
                "13b35cd8.69bf23",
                "ec0ef000.10059"
            ]
        ]
    },
    {
        "id": "ec0ef000.10059",
        "type": "debug",
        "z": "a7a0164d.f58e58",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 469,
        "y": 168,
        "wires": []
    },
    {
        "id": "3efc68c8.673a58",
        "type": "inject",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "nibe/register/get",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "x": 254,
        "y": 77,
        "wires": [
            [
                "2dd86788.1e59d8"
            ]
        ]
    },
    {
        "id": "5c005507.a444bc",
        "type": "mqtt in",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "nibe/config",
        "qos": "2",
        "broker": "d7f6b34d.d13d6",
        "x": 655,
        "y": 154,
        "wires": [
            [
                "e145733f.34baa"
            ]
        ]
    },
    {
        "id": "da287d0.563f48",
        "type": "mqtt out",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "false",
        "broker": "d7f6b34d.d13d6",
        "x": 876,
        "y": 56,
        "wires": []
    },
    {
        "id": "ec40492b.624e98",
        "type": "mqtt out",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "d7f6b34d.d13d6",
        "x": 1233,
        "y": 168,
        "wires": []
    },
    {
        "id": "7549880b.1596a8",
        "type": "mqtt out",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "d7f6b34d.d13d6",
        "x": 1212,
        "y": 406,
        "wires": []
    },
    {
        "id": "6f1a350c.cf66cc",
        "type": "mqtt out",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "d7f6b34d.d13d6",
        "x": 1156,
        "y": 875,
        "wires": []
    },
    {
        "id": "89600b26.de1618",
        "type": "mqtt out",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "",
        "qos": "2",
        "retain": "",
        "broker": "d7f6b34d.d13d6",
        "x": 946,
        "y": 763,
        "wires": []
    },
    {
        "id": "2dd86788.1e59d8",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "func": "var topic = msg.topic;\nif(topic==\"nibe/config/get\") {\n    var config = global.get('config');\n    if(config===undefined) {\n        return msg;\n    }\n} else if(topic==\"nibe/register/get\") {\n    var register = global.get('register');\n    if(register===undefined) {\n        return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 637,
        "y": 77,
        "wires": [
            [
                "da287d0.563f48"
            ]
        ]
    },
    {
        "id": "e0d9e754.e1fac8",
        "type": "mqtt in",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "nibe/log",
        "qos": "2",
        "broker": "d7f6b34d.d13d6",
        "x": 484,
        "y": 1176,
        "wires": [
            [
                "342ffa8c.3c0a46",
                "651b0f09.82b08"
            ]
        ]
    },
    {
        "id": "651b0f09.82b08",
        "type": "debug",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1085,
        "y": 1190,
        "wires": []
    },
    {
        "id": "4cb1221f.21d22c",
        "type": "debug",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 386,
        "y": 721,
        "wires": []
    },
    {
        "id": "71454f91.9089f",
        "type": "inject",
        "z": "ade2c7a9.e97ba8",
        "name": "Starta",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 170,
        "y": 1220,
        "wires": [
            [
                "ff98bcf7.53366"
            ]
        ]
    },
    {
        "id": "ff98bcf7.53366",
        "type": "subflow:64327e50.8f365",
        "z": "ade2c7a9.e97ba8",
        "name": "Skrivläge",
        "x": 306,
        "y": 1220,
        "wires": []
    },
    {
        "id": "db862c6c.0430d",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.mqtt.host",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 227,
        "y": 952,
        "wires": [
            [
                "1c132ce4.f75973"
            ]
        ]
    },
    {
        "id": "c8a189c9.71c2b8",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.mqtt.port",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 227,
        "y": 994,
        "wires": [
            [
                "608dd9cd.f906c8"
            ]
        ]
    },
    {
        "id": "4c5fe2e7.3d8a7c",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.mqtt.username",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 227,
        "y": 1036,
        "wires": [
            [
                "8c131446.9508f8"
            ]
        ]
    },
    {
        "id": "674eb780.7d3f48",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "func": "var config = global.get('config');\nif(config===undefined) return;\nif(config.mqtt===undefined) {\n    config.mqtt = {};\n}\nconfig.mqtt[msg.topic] = msg.payload;\nmsg.topic = \"nibe/config/set\"\nmsg.payload = JSON.stringify(config);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 694,
        "y": 987,
        "wires": [
            [
                "89600b26.de1618"
            ]
        ]
    },
    {
        "id": "acd630c8.c616f",
        "type": "inject",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "nibe/config/get",
        "payload": "true",
        "payloadType": "bool",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "x": 530,
        "y": 20,
        "wires": [
            [
                "da287d0.563f48"
            ]
        ]
    },
    {
        "id": "a7a2f16e.8deca",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.mqtt.active",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 528,
        "y": 378,
        "wires": [
            [
                "342ae14d.99583e"
            ]
        ]
    },
    {
        "id": "17ef8467.8996bc",
        "type": "mqtt in",
        "z": "a7a0164d.f58e58",
        "name": "",
        "topic": "nibe/config",
        "qos": "2",
        "broker": "d7f6b34d.d13d6",
        "x": 165,
        "y": 364,
        "wires": [
            [
                "cd46d2e9.8844"
            ]
        ]
    },
    {
        "id": "cd46d2e9.8844",
        "type": "json",
        "z": "a7a0164d.f58e58",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 302,
        "y": 364,
        "wires": [
            [
                "22ec9df1.685f92",
                "14521232.8c30be",
                "cdb23f74.05ffb",
                "89473eb3.9e903",
                "48a2d02a.cd62e",
                "bf99319c.d4c2c",
                "190f986d.7221f8"
            ]
        ]
    },
    {
        "id": "22ec9df1.685f92",
        "type": "change",
        "z": "a7a0164d.f58e58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.airflow.active",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 451,
        "y": 364,
        "wires": [
            [
                "675ff912.8423a8",
                "a775503.592a7b",
                "93968741.f232f8",
                "6b292ae8.4b8c84"
            ]
        ]
    },
    {
        "id": "33568b.ffedf974",
        "type": "function",
        "z": "a7a0164d.f58e58",
        "name": "",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined || data===undefined) return;\nif(msg.topic!=\"mqtt\"){\nif(config.plugins[msg.topic]===undefined) {\n    config.plugins[msg.topic] = {};\n}\n}\nif(msg.topic==\"mqtt\") {\n    config[msg.topic].active = msg.payload;\n} else {\n    config.plugins[msg.topic].active = msg.payload;\n}\n\nmsg.topic = \"nibe/config/set\"\nmsg.payload = JSON.stringify(config);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 364,
        "wires": [
            [
                "33672ca8.e3f9d4"
            ]
        ]
    },
    {
        "id": "33672ca8.e3f9d4",
        "type": "mqtt out",
        "z": "a7a0164d.f58e58",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "d7f6b34d.d13d6",
        "x": 1023,
        "y": 364,
        "wires": []
    },
    {
        "id": "93968741.f232f8",
        "type": "change",
        "z": "a7a0164d.f58e58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 633,
        "y": 420,
        "wires": [
            [
                "9f14d280.2b3ec",
                "fc1f6629.6bf228",
                "31d982bd.6bd72e",
                "1bc9e3e0.e20b0c",
                "e15df6d6.6809a8"
            ]
        ]
    },
    {
        "id": "14521232.8c30be",
        "type": "change",
        "z": "a7a0164d.f58e58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.airflow.setpoint_normal",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 416,
        "y": 420,
        "wires": [
            [
                "9f14d280.2b3ec"
            ]
        ]
    },
    {
        "id": "a775503.592a7b",
        "type": "function",
        "z": "a7a0164d.f58e58",
        "name": "",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined || data===undefined) return;\nif(config.plugins.airflow.active!==true) return;\nif(msg.topic==config.defaultTopic+\"47265\") {\n    node.send([null,null,{payload:msg.payload}]);\n}\nif(msg.topic==\"nibe/config\" || msg.topic==config.defaultTopic+\"40050\" || msg.topic==\"setpoint_low_active\" || msg.topic==\"setpoint_low\" || msg.topic==\"setpoint_normal\") {\n    if(config.plugins.airflow===undefined) {\n        config.plugins.airflow = {};\n    }\n    var flow = data[40050]||getData(40050);\n    node.send([null,{payload:flow}]);\n    if(config.plugins.airflow.active===true && config.plugins.airflow.setpoint===0) {\n    config.plugins.airflow.setpoint = Number(flow);\n    msg.topic = \"nibe/config/set\"\n    msg.payload = JSON.stringify(config);\n    return msg;\n} else if(msg.topic==\"setpoint_normal\") {\n    config.plugins.airflow.setpoint_normal = msg.payload;\n    // Ta bort gammalt configvärde...\n    config.plugins.airflow.setpoint = undefined;\n    msg.topic = \"nibe/config/set\"\n    msg.payload = JSON.stringify(config);\n    return msg;\n} else if(msg.topic==\"setpoint_low_active\") {\n    config.plugins.airflow.setpoint_low_active = msg.payload;\n    msg.topic = \"nibe/config/set\"\n    msg.payload = JSON.stringify(config);\n    return msg;\n} else if(msg.topic==\"setpoint_low\") {\n    config.plugins.airflow.setpoint_low = msg.payload;\n    msg.topic = \"nibe/config/set\"\n    msg.payload = JSON.stringify(config);\n    return msg;\n}\n} else if(msg.topic==config.defaultTopic+\"40026\") {\n    node.send([null,null,null,{topic:\"Avluftstemperatur\",payload:msg.payload}])\n} else if(msg.topic==config.defaultTopic+\"43136\") {\n    node.send([null,null,null,{topic:\"Kompressorfrekvens\",payload:msg.payload}])\n}\n\nfunction getData(data) {\n    msg.topic = config.defaultTopic+data+\"/get\";\n    msg.payload = true;\n    return msg;\n}",
        "outputs": 4,
        "noerr": 0,
        "x": 1058,
        "y": 462,
        "wires": [
            [
                "33672ca8.e3f9d4"
            ],
            [
                "e10cbbfe.72daf8",
                "65c9977e.e69a98"
            ],
            [
                "4460715e.f373d",
                "fd7adca5.df6e7"
            ],
            [
                "d1eba932.145588"
            ]
        ]
    },
    {
        "id": "46d26b56.1971a4",
        "type": "mqtt in",
        "z": "a7a0164d.f58e58",
        "name": "",
        "topic": "#",
        "qos": "2",
        "datatype": "auto",
        "broker": "d7f6b34d.d13d6",
        "x": 904,
        "y": 462,
        "wires": [
            [
                "a775503.592a7b"
            ]
        ]
    },
    {
        "id": "ff3ac65e.37ac98",
        "type": "mqtt in",
        "z": "41f52341.96686c",
        "name": "",
        "topic": "nibe/config",
        "qos": "2",
        "broker": "d7f6b34d.d13d6",
        "x": 165,
        "y": 567,
        "wires": [
            [
                "1b75c377.8ce68d"
            ]
        ]
    },
    {
        "id": "1b75c377.8ce68d",
        "type": "json",
        "z": "41f52341.96686c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 330,
        "y": 567,
        "wires": [
            [
                "a67cd084.c0d24",
                "17175145.e5013f",
                "e064da88.1c1608",
                "d72a48fe.13bf18",
                "f8d21b99.577738",
                "19aea50f.7a39db",
                "1e1590cd.2f8dbf",
                "619dd86a.08f0f8",
                "52ab9daa.b664d4",
                "6ddcbdd5.219ff4",
                "c6ae1105.81695",
                "c3c3d8d1.9e7f38",
                "52919989.823948",
                "f3c4f2b1.a45d7"
            ]
        ]
    },
    {
        "id": "a67cd084.c0d24",
        "type": "change",
        "z": "41f52341.96686c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.smhi.active",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 514,
        "y": 560,
        "wires": [
            [
                "378a4915.ce7e46",
                "c81f5341.2063b"
            ]
        ]
    },
    {
        "id": "ad882279.505e1",
        "type": "function",
        "z": "41f52341.96686c",
        "name": "",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined || data===undefined) return;\nif(msg.topic!=\"mqtt\"){\nif(config.plugins[msg.topic]===undefined) {\n    config.plugins[msg.topic] = {};\n}\n}\nif(msg.topic==\"mqtt\") {\n    config[msg.topic].active = msg.payload;\n} else {\n    config.plugins[msg.topic].active = msg.payload;\n}\n\nmsg.topic = \"nibe/config/set\"\nmsg.payload = JSON.stringify(config);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 939,
        "y": 560,
        "wires": [
            [
                "c5e304bf.fc62e8"
            ]
        ]
    },
    {
        "id": "c5e304bf.fc62e8",
        "type": "mqtt out",
        "z": "41f52341.96686c",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "d7f6b34d.d13d6",
        "x": 1282,
        "y": 602,
        "wires": []
    },
    {
        "id": "c81f5341.2063b",
        "type": "change",
        "z": "41f52341.96686c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 339,
        "y": 882,
        "wires": [
            [
                "7d7654e1.96954c"
            ]
        ]
    },
    {
        "id": "17175145.e5013f",
        "type": "change",
        "z": "41f52341.96686c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.smhi.hours",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 157,
        "y": 777,
        "wires": [
            [
                "7d7654e1.96954c",
                "279b9bf4.1c3254"
            ]
        ]
    },
    {
        "id": "d3bb6654.5dbe78",
        "type": "mqtt in",
        "z": "dedc2653.57a3d8",
        "name": "",
        "topic": "nibe/config",
        "qos": "2",
        "broker": "d7f6b34d.d13d6",
        "x": 102,
        "y": 623,
        "wires": [
            [
                "cc7223e3.2ee5f"
            ]
        ]
    },
    {
        "id": "cc7223e3.2ee5f",
        "type": "json",
        "z": "dedc2653.57a3d8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 295,
        "y": 616,
        "wires": [
            [
                "409b06bf.63fea8",
                "2bab615e.ef751e",
                "fcfdd43f.33dc58",
                "8f904fa0.731f3",
                "7cdd1090.5dc0a"
            ]
        ]
    },
    {
        "id": "409b06bf.63fea8",
        "type": "change",
        "z": "dedc2653.57a3d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.indoor.active",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 451,
        "y": 567,
        "wires": [
            [
                "bbb2d0f.98e133",
                "a9fdb1ee.bcf9e"
            ]
        ]
    },
    {
        "id": "a358e1d1.4e87",
        "type": "function",
        "z": "dedc2653.57a3d8",
        "name": "",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined || data===undefined) return;\nif(msg.topic!=\"mqtt\"){\nif(config.plugins[msg.topic]===undefined) {\n    config.plugins[msg.topic] = {};\n}\n}\nif(msg.topic==\"mqtt\") {\n    config[msg.topic].active = msg.payload;\n} else {\n    config.plugins[msg.topic].active = msg.payload;\n}\n\nmsg.topic = \"nibe/config/set\"\nmsg.payload = JSON.stringify(config);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 876,
        "y": 616,
        "wires": [
            [
                "fd9604aa.eda248"
            ]
        ]
    },
    {
        "id": "fd9604aa.eda248",
        "type": "mqtt out",
        "z": "dedc2653.57a3d8",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "d7f6b34d.d13d6",
        "x": 1317,
        "y": 644,
        "wires": []
    },
    {
        "id": "a9fdb1ee.bcf9e",
        "type": "change",
        "z": "dedc2653.57a3d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 357,
        "wires": [
            [
                "705ed848.fa2f48",
                "1e06d0c.d83dd2f",
                "6b290d30.31bfd4",
                "dbdce37e.8b558",
                "a38e1625.a487e8"
            ]
        ]
    },
    {
        "id": "f453f85b.eda668",
        "type": "function",
        "z": "dedc2653.57a3d8",
        "name": "",
        "func": "var config = global.get('config');\nif(config.defaultTopic===undefined) { return; }\nmsg.topic = config.defaultTopic+msg.topic+\"/set\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1177,
        "y": 574,
        "wires": [
            [
                "fd9604aa.eda248"
            ]
        ]
    },
    {
        "id": "98da337f.216b",
        "type": "switch",
        "z": "dedc2653.57a3d8",
        "name": "47375",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "47375",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 764,
        "y": 469,
        "wires": [
            [
                "1e06d0c.d83dd2f"
            ]
        ]
    },
    {
        "id": "a7a0ab8d.299048",
        "type": "switch",
        "z": "dedc2653.57a3d8",
        "name": "47398",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "47398",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 764,
        "y": 420,
        "wires": [
            [
                "705ed848.fa2f48"
            ]
        ]
    },
    {
        "id": "9e75b142.7ff69",
        "type": "function",
        "z": "dedc2653.57a3d8",
        "name": "",
        "func": "var configTopic = \"nibe/config\";\nvar registerTopic = \"nibe/register\";\nvar config = global.get('config');\nvar data = global.get('data')||{};\nif(msg.topic==configTopic) {\n    config = JSON.parse(msg.payload);\n    //global.set('config',config);\n    node.send({debug:config});\n}\nif(config===undefined) { return; }\nif(config.defaultTopic!==undefined) {\n    var topic = msg.topic.split(\"/\");\n    var topicConfig = config.defaultTopic.split(\"/\");\n    if(topic[0]==topicConfig[0] && topic[1]==topicConfig[1]) {\n        if(data!==undefined) {\n            data[topic[2]] = String(msg.payload);\n            //global.set('data',data)\n            node.send({topic:topic[2],payload:msg.payload});\n        }\n        \n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 274,
        "y": 385,
        "wires": [
            [
                "97750ae6.8a3908",
                "a7a0ab8d.299048",
                "98da337f.216b",
                "ac562256.52a2a",
                "20313b53.14e214",
                "44421281.ed45dc"
            ]
        ]
    },
    {
        "id": "7a101e88.1020e",
        "type": "mqtt in",
        "z": "dedc2653.57a3d8",
        "name": "",
        "topic": "#",
        "qos": "2",
        "broker": "d7f6b34d.d13d6",
        "x": 126,
        "y": 385,
        "wires": [
            [
                "9e75b142.7ff69"
            ]
        ]
    },
    {
        "id": "97750ae6.8a3908",
        "type": "debug",
        "z": "dedc2653.57a3d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 310,
        "y": 320,
        "wires": []
    },
    {
        "id": "3a917b4c.221354",
        "type": "mqtt in",
        "z": "7e884fc9.b6c45",
        "name": "",
        "topic": "nibe/config",
        "qos": "2",
        "broker": "d7f6b34d.d13d6",
        "x": 193,
        "y": 301,
        "wires": [
            [
                "e309a359.2adb8"
            ]
        ]
    },
    {
        "id": "e309a359.2adb8",
        "type": "json",
        "z": "7e884fc9.b6c45",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 344,
        "y": 301,
        "wires": [
            [
                "38c659c3.8513e6",
                "e1fe02ec.04cc2",
                "6389784c.9ff848",
                "71870400.355edc",
                "6fe00afc.6d1094",
                "770a86d3.63f768",
                "c7283d6.f9f13c",
                "8893aef2.e7679",
                "106b55a7.fd5aca",
                "e1cf7e24.eb737",
                "bd161436.f78cf8",
                "9c97283a.361698",
                "8f60de7b.3b9e4",
                "db7158f3.3350d8"
            ]
        ]
    },
    {
        "id": "38c659c3.8513e6",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.tibber.active",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 507,
        "y": 301,
        "wires": [
            [
                "6fb31f69.895d1",
                "b6e5148a.e929b8"
            ]
        ]
    },
    {
        "id": "d8c7691f.8b40b8",
        "type": "function",
        "z": "7e884fc9.b6c45",
        "name": "",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined || data===undefined) return;\nif(msg.topic!=\"mqtt\"){\nif(config.plugins[msg.topic]===undefined) {\n    config.plugins[msg.topic] = {};\n}\n}\nif(msg.topic==\"mqtt\") {\n    config[msg.topic].active = msg.payload;\n} else {\n    config.plugins[msg.topic].active = msg.payload;\n}\n\nmsg.topic = \"nibe/config/set\"\nmsg.payload = JSON.stringify(config);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 946,
        "y": 301,
        "wires": [
            [
                "ab7c7238.65431"
            ]
        ]
    },
    {
        "id": "ab7c7238.65431",
        "type": "mqtt out",
        "z": "7e884fc9.b6c45",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "d7f6b34d.d13d6",
        "x": 1121,
        "y": 301,
        "wires": []
    },
    {
        "id": "342ffa8c.3c0a46",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Logg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 1220,
        "wires": [
            [
                "a858843a.2748e8"
            ]
        ]
    },
    {
        "id": "cdb23f74.05ffb",
        "type": "change",
        "z": "a7a0164d.f58e58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.airflow.enable",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 458,
        "y": 322,
        "wires": [
            [
                "d14d71e6.bbf26",
                "f8afc1f9.b1076"
            ]
        ]
    },
    {
        "id": "d14d71e6.bbf26",
        "type": "change",
        "z": "a7a0164d.f58e58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 150,
        "y": 623,
        "wires": [
            [
                "675ff912.8423a8",
                "9f14d280.2b3ec",
                "fc1f6629.6bf228",
                "31d982bd.6bd72e",
                "1bc9e3e0.e20b0c",
                "e15df6d6.6809a8"
            ]
        ]
    },
    {
        "id": "f8afc1f9.b1076",
        "type": "debug",
        "z": "a7a0164d.f58e58",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 609,
        "y": 497,
        "wires": []
    },
    {
        "id": "6b9db807.c099a8",
        "type": "inject",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "nibe/modbus/47011/set",
        "payload": "9",
        "payloadType": "num",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 932,
        "y": 273,
        "wires": [
            [
                "7549880b.1596a8"
            ]
        ]
    },
    {
        "id": "2bab615e.ef751e",
        "type": "change",
        "z": "dedc2653.57a3d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.indoor.nibesensor",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 620,
        "wires": [
            [
                "6b290d30.31bfd4"
            ]
        ]
    },
    {
        "id": "93c66530.2e43d8",
        "type": "function",
        "z": "dedc2653.57a3d8",
        "name": "",
        "func": "var config = global.get('config');\nif(config===undefined) return;\nif(config.plugins.indoor===undefined) {\n    config.plugins.indoor = {};\n}\n    config.plugins.indoor[msg.topic] = msg.payload;\n\nmsg.topic = \"nibe/config/set\"\nmsg.payload = JSON.stringify(config);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1070,
        "y": 820,
        "wires": [
            [
                "fd9604aa.eda248"
            ]
        ]
    },
    {
        "id": "22050671.3254aa",
        "type": "function",
        "z": "dedc2653.57a3d8",
        "name": "",
        "func": "if(msg.payload===true) {\n    msg.payload = false;\n} else if(msg.payload===false) {\n    msg.payload = true;\n}\nmsg = {\n    enabled:msg.payload\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 860,
        "wires": [
            [
                "b6165c50.d7caf"
            ]
        ]
    },
    {
        "id": "fcfdd43f.33dc58",
        "type": "change",
        "z": "dedc2653.57a3d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.indoor.mqttsensor",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 451,
        "y": 812,
        "wires": [
            [
                "b6165c50.d7caf"
            ]
        ]
    },
    {
        "id": "c5b04105.316c7",
        "type": "mqtt in",
        "z": "dedc2653.57a3d8",
        "name": "",
        "topic": "nibe/plugins/indoor/mqttsensor",
        "qos": "2",
        "broker": "d7f6b34d.d13d6",
        "x": 186,
        "y": 896,
        "wires": [
            [
                "2311aef7.9dd162",
                "7a68bca9.5903b4",
                "5e479433.4ccbfc"
            ]
        ]
    },
    {
        "id": "2311aef7.9dd162",
        "type": "debug",
        "z": "dedc2653.57a3d8",
        "name": "MQTT Sensor",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 486,
        "y": 854,
        "wires": []
    },
    {
        "id": "7a68bca9.5903b4",
        "type": "function",
        "z": "dedc2653.57a3d8",
        "name": "",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined || data===undefined) return;\nif(config.plugins.indoor.mqttsensor_value!==undefined && config.plugins.indoor.mqttsensor_value===true) {\n    global.set('data.mqttSensor',String(msg.payload))\n} else {\n    global.set('data.mqttSensor',undefined)\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 410,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "65c9977e.e69a98",
        "type": "change",
        "z": "a7a0164d.f58e58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Ärvärde",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 600,
        "wires": [
            [
                "d1eba932.145588"
            ]
        ]
    },
    {
        "id": "fd7adca5.df6e7",
        "type": "change",
        "z": "a7a0164d.f58e58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Fläkthastighet",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 640,
        "wires": [
            [
                "d1eba932.145588"
            ]
        ]
    },
    {
        "id": "6b292ae8.4b8c84",
        "type": "change",
        "z": "a7a0164d.f58e58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 560,
        "wires": [
            [
                "d1eba932.145588"
            ]
        ]
    },
    {
        "id": "19b34a9a.741395",
        "type": "http request",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": false,
        "url": "https://raw.githubusercontent.com/bebben88/NibePi/master/VERSION",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 510,
        "y": 1340,
        "wires": [
            [
                "a5bf2e2c.f92b1",
                "af2bd49d.43f988"
            ]
        ]
    },
    {
        "id": "9cc0ab54.e9e558",
        "type": "inject",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "check",
        "payload": "",
        "payloadType": "date",
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "x": 170,
        "y": 1340,
        "wires": [
            [
                "19b34a9a.741395"
            ]
        ]
    },
    {
        "id": "a5bf2e2c.f92b1",
        "type": "debug",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 710,
        "y": 1320,
        "wires": []
    },
    {
        "id": "afaaa0c4.2ed3",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "func": "var config = global.get('config');\nvar url = context.get('url');\nvar url2 = context.get('url2');\nvar version = context.get('version');\nif(config===undefined) { return; }\nif(msg.topic==\"check\") {\n    node.status('Hello')\nif(msg.statusCode==200) {\n    if(msg.payload[0].version!=config.version) {\n        node.send({payload:`Ny version finns tillgänglig. Version: ${msg.payload[0].version}<br>\n        Ändringar:<br>\n        ${msg.payload[0].changelog}\n        `})\n        context.set('url',msg.payload[0].url);\n        context.set('url2',msg.payload[0].url2);\n        context.set('version',msg.payload[0].version);\n        node.send([null,{enabled:true}])\n        \n    } else {\n        msg.payload = \"Den senaste versionen av NibePi är installerad.\";\n        node.send([null,{enabled:false}])\n        return msg;\n    }\n}\n} else if(msg.topic==\"install\") {\n    node.error('Uppdatering',{topic:\"Uppdatering\",payload:\"Installerar uppdatering...\"})\n    node.send([null,null,{url:url,url2:url2,version:version}])\n    // Hämta ny version\n}",
        "outputs": 3,
        "noerr": 0,
        "x": 687,
        "y": 1547,
        "wires": [
            [
                "511d1c67.799404"
            ],
            [
                "1503abff.27c9b4",
                "7acd2ab4.a406f4"
            ],
            [
                "14276be2.4beb14"
            ]
        ]
    },
    {
        "id": "7acd2ab4.a406f4",
        "type": "debug",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1051,
        "y": 1463,
        "wires": []
    },
    {
        "id": "af2bd49d.43f988",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "check",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1360,
        "wires": [
            [
                "afaaa0c4.2ed3"
            ]
        ]
    },
    {
        "id": "d955baaf.b75258",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "cp /home/pi/.node-red/flows.json /home/pi/.node-red/flows_saved.bak && cp /home/pi/.nibepi/heatpump.js /home/pi/.nibepi/heatpump_saved.js && cp /home/pi/.nibepi/config.json /home/pi/.nibepi/config_saved.json",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Gör backup",
        "x": 672,
        "y": 1631,
        "wires": [
            [],
            [],
            [
                "1da9bc87.900333"
            ]
        ]
    },
    {
        "id": "7b34c8bf.d17b68",
        "type": "debug",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 770,
        "y": 1700,
        "wires": []
    },
    {
        "id": "1da9bc87.900333",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "func": "if(msg.payload.code===0) {\n    node.error('Uppdatering',{topic:\"Uppdatering\",payload:\"Backup sparad\"})\n    node.send({topic:\"install\",payload:true});\n} else {\n    node.error('Uppdatering',{topic:\"Uppdatering\",payload:\"Fel. Uppdatering avbruten.\"})\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 834,
        "y": 1638,
        "wires": [
            [
                "afaaa0c4.2ed3"
            ]
        ]
    },
    {
        "id": "63c6b5ca.9c704c",
        "type": "http request",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 330,
        "y": 1740,
        "wires": [
            [
                "ca6f38ba.2e1a58"
            ]
        ]
    },
    {
        "id": "ca6f38ba.2e1a58",
        "type": "file",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.node-red/flows.json",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 560,
        "y": 1740,
        "wires": [
            [
                "7b34c8bf.d17b68",
                "7df122c9.9139dc"
            ]
        ]
    },
    {
        "id": "14276be2.4beb14",
        "type": "delay",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 160,
        "y": 1740,
        "wires": [
            [
                "63c6b5ca.9c704c"
            ]
        ]
    },
    {
        "id": "45d95338.bad07c",
        "type": "http request",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 410,
        "y": 1800,
        "wires": [
            [
                "fbc2612a.67d37"
            ]
        ]
    },
    {
        "id": "fbc2612a.67d37",
        "type": "file",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/heatpump.js",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 640,
        "y": 1800,
        "wires": [
            [
                "be1b9475.0e6e58",
                "dae895ea.bf1e18"
            ]
        ]
    },
    {
        "id": "7df122c9.9139dc",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "url2",
                "pt": "msg",
                "to": "url",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 1740,
        "wires": [
            [
                "45d95338.bad07c"
            ]
        ]
    },
    {
        "id": "be1b9475.0e6e58",
        "type": "debug",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 870,
        "y": 1800,
        "wires": []
    },
    {
        "id": "c04603d2.4106f",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "Färdig",
        "func": "if(msg.topic==\"done\") {\n    node.error('Uppdatering',{topic:\"Uppdatering\",payload:\"Uppdatering färdig, startar om...\"})\n    node.send({payload:true});\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1130,
        "y": 1880,
        "wires": [
            [
                "4af779bd.44f368"
            ]
        ]
    },
    {
        "id": "dae895ea.bf1e18",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "done",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 882,
        "y": 1876,
        "wires": [
            [
                "c04603d2.4106f"
            ]
        ]
    },
    {
        "id": "5b467146.2e43a",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "sudo service nibepi restart && sudo service nodered restart",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Starta om",
        "x": 1480,
        "y": 1880,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "d50e6442.977348",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "sudo mount -o remount,rw /",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 253,
        "y": 1589,
        "wires": [
            [],
            [],
            [
                "668766a4.1e7618"
            ]
        ]
    },
    {
        "id": "668766a4.1e7618",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 442,
        "y": 1603,
        "wires": [
            [
                "d955baaf.b75258"
            ]
        ]
    },
    {
        "id": "d2f51b3d.dd74a8",
        "type": "comment",
        "z": "ade2c7a9.e97ba8",
        "name": "Version 1.0.6",
        "info": "",
        "x": 115,
        "y": 273,
        "wires": []
    },
    {
        "id": "2a75b220.bceb6e",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.debug",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 542,
        "y": 322,
        "wires": [
            [
                "3a3f02b8.10d73e"
            ]
        ]
    },
    {
        "id": "b6d60ac6.a4d8d8",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "func": "var config = global.get('config');\nif(config===undefined) return;\nif(config[msg.topic]===undefined) {\n    config[msg.topic] = {};\n} \nconfig[msg.topic] = msg.payload;\n\n\nmsg.topic = \"nibe/config/set\"\nmsg.payload = JSON.stringify(config);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1212,
        "y": 280,
        "wires": [
            [
                "7549880b.1596a8"
            ]
        ]
    },
    {
        "id": "f27788df.8f7638",
        "type": "file",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/node-red-static/log/nodered.log",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 1112,
        "y": 357,
        "wires": [
            [
                "b6d60ac6.a4d8d8"
            ]
        ]
    },
    {
        "id": "ab38f4c.12d7608",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 862,
        "y": 322,
        "wires": [
            [
                "f27788df.8f7638"
            ],
            [
                "b6d60ac6.a4d8d8"
            ]
        ]
    },
    {
        "id": "589d9437.b335fc",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "sudo mount -o remount,rw /",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 442,
        "y": 2205,
        "wires": [
            [],
            [],
            [
                "d0b5da7b.589cf8"
            ]
        ]
    },
    {
        "id": "d0b5da7b.589cf8",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 603,
        "y": 2268,
        "wires": [
            [
                "f1beddd7.12012"
            ]
        ]
    },
    {
        "id": "ca8aea85.7b36e8",
        "type": "inject",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 189,
        "y": 2275,
        "wires": [
            [
                "589d9437.b335fc"
            ]
        ]
    },
    {
        "id": "f1beddd7.12012",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "touch /home/pi/node-red-static/nodered.log && sudo mv /home/pi/node-red-static/nodered.log /home/pi/node-red-static/log/nodered.log",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Skapa logg",
        "x": 784,
        "y": 2261,
        "wires": [
            [],
            [],
            [
                "d56a6693.5d08a8"
            ]
        ]
    },
    {
        "id": "d56a6693.5d08a8",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "sudo mount -o remount,ro /",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1044,
        "y": 2261,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "e7be9d5b.c0bff",
        "type": "inject",
        "z": "ade2c7a9.e97ba8",
        "name": "Starta",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 330,
        "y": 252,
        "wires": [
            [
                "77d14157.16f5a"
            ]
        ]
    },
    {
        "id": "77d14157.16f5a",
        "type": "subflow:64327e50.8f365",
        "z": "ade2c7a9.e97ba8",
        "name": "Skrivläge",
        "env": [],
        "x": 466,
        "y": 252,
        "wires": []
    },
    {
        "id": "6ce01c79.d82294",
        "type": "inject",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 658,
        "y": 616,
        "wires": [
            [
                "92709014.a8fb2"
            ]
        ]
    },
    {
        "id": "ad071f9c.747ff",
        "type": "debug",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1267,
        "y": 651,
        "wires": []
    },
    {
        "id": "92709014.a8fb2",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "Add Registers",
        "func": "var register = JSON.parse(msg.payload);\nif(register===undefined) return;\nvar outRegister = [];\nfor( var i = 0; i < register.length; i++){\n    outRegister[i] = {};\n    outRegister[i].title = register[i].register+\" (\"+register[i].mode+\"): \"+register[i].titel;\n    outRegister[i].description = register[i].info;\n    outRegister[i].register = register[i].register;\n    outRegister[i].mode = register[i].mode;\n    outRegister[i].unit = register[i].unit;\n    outRegister[i].isChecked = register[i].isChecked;\n    \n}\nif(outRegister!==undefined && outRegister!==[]) {\n    node.send({payload:outRegister});\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 864,
        "y": 602,
        "wires": [
            [
                "d3e7b620.1b5828"
            ]
        ]
    },
    {
        "id": "b69122fd.049d2",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "Add Registers",
        "func": "if(msg.payload.isChecked===true) {\n    node.send({topic:\"nibe/register/add\",payload:msg.payload.register});\n} else if (msg.payload.isChecked===false) {\n    node.send({topic:\"nibe/register/remove\",payload:msg.payload.register});\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1172,
        "y": 560,
        "wires": [
            [
                "f262755c.4c82e8"
            ]
        ]
    },
    {
        "id": "f262755c.4c82e8",
        "type": "mqtt out",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "d7f6b34d.d13d6",
        "x": 1282,
        "y": 602,
        "wires": []
    },
    {
        "id": "883f5e20.3b7f5",
        "type": "mqtt in",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "nibe/register",
        "qos": "2",
        "broker": "d7f6b34d.d13d6",
        "x": 658,
        "y": 560,
        "wires": [
            [
                "92709014.a8fb2"
            ]
        ]
    },
    {
        "id": "5ac35585.a0f14c",
        "type": "debug",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1092,
        "y": 1071,
        "wires": []
    },
    {
        "id": "17f52438.4a54cc",
        "type": "inject",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 903,
        "y": 1085,
        "wires": [
            [
                "5ac35585.a0f14c"
            ]
        ]
    },
    {
        "id": "f4f542f1.cf26c",
        "type": "debug",
        "z": "7e884fc9.b6c45",
        "name": "Tibber",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 757,
        "y": 189,
        "wires": []
    },
    {
        "id": "d2cbc15a.ef3d2",
        "type": "inject",
        "z": "41f52341.96686c",
        "name": "",
        "topic": "nibe/suncalc/get",
        "payload": "",
        "payloadType": "date",
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "x": 673,
        "y": 931,
        "wires": [
            [
                "279b9bf4.1c3254"
            ]
        ]
    },
    {
        "id": "a9a5c28d.d3298",
        "type": "mqtt out",
        "z": "41f52341.96686c",
        "name": "",
        "topic": "",
        "qos": "2",
        "retain": "false",
        "broker": "d7f6b34d.d13d6",
        "x": 1072,
        "y": 931,
        "wires": []
    },
    {
        "id": "fdaa70b1.6cd28",
        "type": "mqtt in",
        "z": "41f52341.96686c",
        "name": "",
        "topic": "nibe/suncalc",
        "qos": "2",
        "broker": "d7f6b34d.d13d6",
        "x": 483,
        "y": 308,
        "wires": [
            [
                "6b5ac879.3442a8"
            ]
        ]
    },
    {
        "id": "6b5ac879.3442a8",
        "type": "json",
        "z": "41f52341.96686c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 638,
        "y": 308,
        "wires": [
            [
                "68464a6e.039964"
            ]
        ]
    },
    {
        "id": "32ccf630.a0ca4a",
        "type": "function",
        "z": "41f52341.96686c",
        "name": "",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined || data===undefined) return;\nif(msg.topic!=\"mqtt\"){\nif(config.plugins.smhi===undefined) {\n    config.plugins.smhi = {};\n}\nif(msg.topic==\"wind_active\" && msg.payload===true) {\n    if(config.plugins.smhi.wind_factor_n===undefined) config.plugins.smhi.wind_factor_n = 1;\n    if(config.plugins.smhi.wind_factor_s===undefined) config.plugins.smhi.wind_factor_s = 1;\n    if(config.plugins.smhi.wind_factor_w===undefined) config.plugins.smhi.wind_factor_w = 1;\n    if(config.plugins.smhi.wind_factor_e===undefined) config.plugins.smhi.wind_factor_e = 1;\n}\n}\n\nconfig.plugins.smhi[msg.topic] = msg.payload;\n\nmsg.topic = \"nibe/config/set\"\nmsg.payload = JSON.stringify(config);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1086,
        "y": 679,
        "wires": [
            [
                "c5e304bf.fc62e8"
            ]
        ]
    },
    {
        "id": "279b9bf4.1c3254",
        "type": "function",
        "z": "41f52341.96686c",
        "name": "",
        "func": "var config = global.get('config');\nif(config===undefined) return;\n\nvar time = Number((Date.now()).toFixed())+(config.plugins.smhi.hours*3600000);\nmsg.payload = {\n    \"lat\":config.plugins.smhi.lat,\n    \"lon\":config.plugins.smhi.lon,\n    \"timestamp\":time\n};\nmsg.topic = \"nibe/suncalc/get\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 918,
        "y": 931,
        "wires": [
            [
                "a9a5c28d.d3298"
            ]
        ]
    },
    {
        "id": "f8d21b99.577738",
        "type": "debug",
        "z": "41f52341.96686c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 270,
        "y": 480,
        "wires": []
    },
    {
        "id": "e064da88.1c1608",
        "type": "change",
        "z": "41f52341.96686c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.smhi.lat",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 507,
        "y": 602,
        "wires": [
            [
                "d1822448.a94508"
            ]
        ]
    },
    {
        "id": "d72a48fe.13bf18",
        "type": "change",
        "z": "41f52341.96686c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.smhi.lon",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 507,
        "y": 637,
        "wires": [
            [
                "5c1a9f37.0bc6e"
            ]
        ]
    },
    {
        "id": "19aea50f.7a39db",
        "type": "change",
        "z": "41f52341.96686c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.smhi.clear",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 763,
        "wires": [
            [
                "8cf2b5f5.630338"
            ]
        ]
    },
    {
        "id": "619dd86a.08f0f8",
        "type": "change",
        "z": "41f52341.96686c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.smhi.half_clear",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 717,
        "y": 847,
        "wires": [
            [
                "ada4442e.d6a878"
            ]
        ]
    },
    {
        "id": "1e1590cd.2f8dbf",
        "type": "change",
        "z": "41f52341.96686c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.smhi.mostly_clear",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 717,
        "y": 805,
        "wires": [
            [
                "a952672d.a041c8"
            ]
        ]
    },
    {
        "id": "b93d065.261edf8",
        "type": "function",
        "z": "7e884fc9.b6c45",
        "name": "",
        "func": "var config = global.get('config');\nif(config===undefined) return;\nif(msg.statusCode!==200) {\n    global.set('priceSet',0);\n    node.warn('Får ej kontakt med Tibber servern. Ställer in reglering till 0.')\n    return;\n}\nvar today = msg.payload.data.viewer.homes[0].currentSubscription.priceInfo.today;\nvar tomorrow;\nvar current = msg.payload.data.viewer.homes[0].currentSubscription.priceInfo.current.energy*100;\nvar consumption = msg.payload.data.viewer.homes[0].consumption.nodes;\n\nnode.send({payload:[]});\nif(consumption!==undefined) {\nfor( var i = 0; i < consumption.length; i++){\n    let timestamp = toTimestamp(consumption[i].from)\n    let topic = \"Förbrukning\"\n    let value = consumption[i].consumption;\n    node.send({topic:topic,timestamp:timestamp,payload:value})\n}\n}\n\nif(msg.payload.data.viewer.homes[0].currentSubscription.priceInfo.tomorrow!==undefined) {\n    tomorrow = msg.payload.data.viewer.homes[0].currentSubscription.priceInfo.tomorrow;\n}\nvar priceArray = today.concat(tomorrow);\npriceArray.sort(function(a,b){return a.energy - b.energy});\nvar time = toTimestamp(new Date());\nvar lowestPrice = toTimestamp(priceArray[0].startsAt);\nvar Min = priceArray[config.plugins.tibber.price_min].energy*100;\nvar Max = priceArray[(priceArray.length-1)-config.plugins.tibber.price_max].energy*100;\n\nvar MinArray = [];\nvar MaxArray = [];\nvar valueArray = [];\nvar adjustArray = [];\nfor( var o = 0; o < priceArray.length; o++){\n    let timestamp = toTimestamp(priceArray[o].startsAt)\n    let topic = \"Pris\"\n    var adjust = 0;\n    var hotwater_adjust = Number(config.plugins.tibber.hotwater_price_normal);\n    let value = Number(priceArray[o].energy*100).toFixed(2);\n    if(value>Max) {\n        hotwater_adjust = Number(config.plugins.tibber.hotwater_price_high);\n        adjust = config.plugins.tibber.adjust_high;\n    }\n    if(value<=(config.plugins.tibber.price_low)) {\n        hotwater_adjust = Number(config.plugins.tibber.hotwater_price_superlow);\n        adjust = config.plugins.tibber.adjust_superlow;\n    } else if(timestamp>=lowestPrice) {\n        if(value<Min) {\n            hotwater_adjust = Number(config.plugins.tibber.hotwater_price_low);\n            adjust = config.plugins.tibber.adjust_low;\n        }\n    }\n    if((Max-Min)<config.plugins.tibber.adjust_active) {\n        hotwater_adjust = Number(config.plugins.tibber.hotwater_price_normal);\n        adjust = 0;\n    }\n    if(config.plugins.tibber.hotwater_active===true) {\n        //node.send({topic:\"Varmvattenläge\",timestamp:timestamp,payload:hotwater_adjust})\n    }\n    MinArray.push({x:timestamp,y:Number(Min.toFixed(2))});\n    MaxArray.push({x:timestamp,y:Number(Max.toFixed(2))});\n    valueArray.push({x:timestamp,y:Number(value)});\n    adjustArray.push({x:timestamp,y:Number(adjust.toFixed(2))})\n    //node.send({topic:\"Nedre Brytpunkt\",timestamp:timestamp,payload:Min})\n    //node.send({topic:\"Övre Brytpunkt\",timestamp:timestamp,payload:Max})\n    //node.send({topic:topic,timestamp:timestamp,payload:value})\n    //node.send({topic:\"Kurvjustering\",timestamp:timestamp,payload:adjust})\n    \n}\n//var test = valueArray.sort(function(a,b){return a.x - b.y});\nvalueArray.sort((a, b) => (a.x > b.x) ? 1 : -1)\nadjustArray.sort((a, b) => (a.x > b.x) ? 1 : -1)\n\nvar sendArray = [\n    {\n        \"series\":[\"Nedre Brytpunkt\",\"Övre Brytpunkt\",\"Pris\",\"Kurvjustering\"],\n        \"data\":[MinArray,MaxArray,valueArray,adjustArray],\n        \"labels\":[\"Nedre Brytpunkt\",\"Övre Brytpunkt\",\"Pris\",\"Kurvjustering\"]\n    }];\nnode.send({topic:\"Kostnad\",payload:sendArray});\nif(current<=(config.plugins.tibber.price_low)) {\n    node.send([null,null,{payload:\"super_low\"}])\n    node.send([null,{payload:`Super lågt elpris: ${(current).toFixed(2)} öre`}])\n} else if(current<Min) {\n    if(time>lowestPrice) {\n        node.send([null,null,{payload:\"low\"}])\n    }\n    node.send([null,{payload:`Lågt elpris: ${(current).toFixed(2)} öre`}])\n} else if(current>Max) {\n    node.send([null,null,{payload:\"high\"}])\n    node.send([null,{payload:`Högt elpris: ${(current).toFixed(2)} öre`}])\n} else {\n    node.send([null,null,{payload:\"normal\"}])\n    node.send([null,{payload:`Normalt elpris: ${(current).toFixed(2)} öre`}])\n}\nfunction toTimestamp(strDate){\n var datum = Date.parse(strDate);\n return Number(datum.toFixed());\n}\n",
        "outputs": 3,
        "noerr": 0,
        "x": 757,
        "y": 119,
        "wires": [
            [
                "4a2a2d38.a43634"
            ],
            [
                "436e890f.3ad428"
            ],
            [
                "b42ae080.74e16"
            ]
        ]
    },
    {
        "id": "c7ba3d3a.9fc47",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "sudo mount -o remount,rw /",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 673,
        "y": 2457,
        "wires": [
            [],
            [],
            [
                "837cf52c.d61658"
            ]
        ]
    },
    {
        "id": "837cf52c.d61658",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 883,
        "y": 2471,
        "wires": [
            [
                "f402d761.947788"
            ]
        ]
    },
    {
        "id": "f402d761.947788",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "sudo service smbd start",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1069,
        "y": 2471,
        "wires": [
            [],
            [],
            [
                "348adf28.64b49"
            ]
        ]
    },
    {
        "id": "348adf28.64b49",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 848,
        "y": 2548,
        "wires": [
            [
                "137f172d.c16289"
            ]
        ]
    },
    {
        "id": "137f172d.c16289",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Samba startad.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1001,
        "y": 2548,
        "wires": [
            [
                "4ea7d6bc.4e7168"
            ]
        ]
    },
    {
        "id": "f0425f62.2aeb3",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "sudo mount -o remount,ro /",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1079,
        "y": 2611,
        "wires": [
            [],
            [],
            [
                "6c3b102d.a104"
            ]
        ]
    },
    {
        "id": "7bd5c5ee.85cb2c",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 884,
        "y": 2611,
        "wires": [
            [
                "f0425f62.2aeb3"
            ]
        ]
    },
    {
        "id": "1687716.fde818f",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "sudo service smbd stop",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 649,
        "y": 2611,
        "wires": [
            [],
            [],
            [
                "7bd5c5ee.85cb2c"
            ]
        ]
    },
    {
        "id": "6c3b102d.a104",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 849,
        "y": 2688,
        "wires": [
            [
                "80a6c3de.615d4"
            ]
        ]
    },
    {
        "id": "80a6c3de.615d4",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Samba stoppad.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1002,
        "y": 2688,
        "wires": [
            [
                "4ea7d6bc.4e7168"
            ]
        ]
    },
    {
        "id": "dffd293e.1ad458",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "sudo service nibepi restart",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 460,
        "y": 2751,
        "wires": [
            [],
            [],
            [
                "30706f58.df4e1"
            ]
        ]
    },
    {
        "id": "30706f58.df4e1",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 666,
        "y": 2765,
        "wires": [
            [
                "b773d189.5b2c8"
            ]
        ]
    },
    {
        "id": "b773d189.5b2c8",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Startar om kärnan.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 836,
        "y": 2765,
        "wires": [
            [
                "4ea7d6bc.4e7168"
            ]
        ]
    },
    {
        "id": "bca6a0a2.63d97",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "sudo service nodered restart",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 477,
        "y": 2835,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "56679770.c1bc78",
        "type": "function",
        "z": "7e884fc9.b6c45",
        "name": "",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined || data===undefined) return;\n\nif(config.plugins.tibber===undefined) {\n    config.plugins.tibber = {};\n}\n\nnode.send([null,{payload:\" \"}]);\nconfig.plugins.tibber[msg.topic] = msg.payload;\nmsg.topic = \"nibe/config/set\"\nmsg.payload = JSON.stringify(config);\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "x": 855,
        "y": 385,
        "wires": [
            [
                "ab7c7238.65431"
            ],
            [
                "9f663e1e.885b6"
            ]
        ]
    },
    {
        "id": "333e437b.43764c",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Token är inlagd i databasen",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 400,
        "wires": [
            [
                "a95559b9.c53f88"
            ]
        ]
    },
    {
        "id": "e1fe02ec.04cc2",
        "type": "switch",
        "z": "7e884fc9.b6c45",
        "name": "",
        "property": "payload.plugins.tibber.token",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 343,
        "y": 350,
        "wires": [
            [
                "333e437b.43764c"
            ],
            [
                "d7caab2f.99b4c8"
            ]
        ]
    },
    {
        "id": "6389784c.9ff848",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.tibber.price_max",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 479,
        "y": 511,
        "wires": [
            [
                "a4d15c9a.e3c7d"
            ]
        ]
    },
    {
        "id": "71870400.355edc",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.tibber.price_min",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 479,
        "y": 560,
        "wires": [
            [
                "5e63c432.130d9c"
            ]
        ]
    },
    {
        "id": "6fe00afc.6d1094",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.tibber.adjust_high",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 472,
        "y": 658,
        "wires": [
            [
                "5fe6d87b.09b708"
            ]
        ]
    },
    {
        "id": "770a86d3.63f768",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.tibber.adjust_low",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 472,
        "y": 707,
        "wires": [
            [
                "52879113.37138"
            ]
        ]
    },
    {
        "id": "c7283d6.f9f13c",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.tibber.adjust_active",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 472,
        "y": 805,
        "wires": [
            [
                "f0b9c693.212c58"
            ]
        ]
    },
    {
        "id": "89c06450.933638",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "sudo reboot",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 434,
        "y": 2905,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "e1cf7e24.eb737",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.tibber.hotwater_price_low",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 472,
        "y": 952,
        "wires": [
            [
                "d18b0fda.6fbac"
            ]
        ]
    },
    {
        "id": "106b55a7.fd5aca",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.tibber.hotwater_price_normal",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 472,
        "y": 903,
        "wires": [
            [
                "63f053e8.0db86c"
            ]
        ]
    },
    {
        "id": "8893aef2.e7679",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.tibber.hotwater_price_high",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 472,
        "y": 854,
        "wires": [
            [
                "e69f30bd.40f35"
            ]
        ]
    },
    {
        "id": "b6e5148a.e929b8",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 206,
        "y": 854,
        "wires": [
            [
                "a4d15c9a.e3c7d",
                "5e63c432.130d9c",
                "5fe6d87b.09b708",
                "52879113.37138",
                "e69f30bd.40f35",
                "63f053e8.0db86c",
                "d18b0fda.6fbac",
                "f0b9c693.212c58",
                "9f663e1e.885b6",
                "d7bbffae.a1a68",
                "98927d22.9c10d",
                "a935dfb.6cf9f2",
                "234333b0.72007c"
            ]
        ]
    },
    {
        "id": "bd161436.f78cf8",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.tibber.hotwater_price_superlow",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 472,
        "y": 1001,
        "wires": [
            [
                "a935dfb.6cf9f2"
            ]
        ]
    },
    {
        "id": "9c97283a.361698",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.tibber.price_low",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 472,
        "y": 609,
        "wires": [
            [
                "d7bbffae.a1a68"
            ]
        ]
    },
    {
        "id": "8f60de7b.3b9e4",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.tibber.adjust_superlow",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 472,
        "y": 756,
        "wires": [
            [
                "98927d22.9c10d"
            ]
        ]
    },
    {
        "id": "db7158f3.3350d8",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.tibber.hotwater_active",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 472,
        "y": 1050,
        "wires": [
            [
                "234333b0.72007c"
            ]
        ]
    },
    {
        "id": "4a2a2d38.a43634",
        "type": "switch",
        "z": "7e884fc9.b6c45",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Förbrukning",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 897,
        "y": 49,
        "wires": [
            [],
            [
                "60ad58d5.7422c8",
                "ef9345be.279118"
            ]
        ]
    },
    {
        "id": "58d74bdf.3f88f4",
        "type": "inject",
        "z": "7e884fc9.b6c45",
        "name": "",
        "topic": "nibe/modbus/43005/set",
        "payload": "-150",
        "payloadType": "num",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 1173,
        "y": 224,
        "wires": [
            [
                "b7e82bb8.f034f8"
            ]
        ]
    },
    {
        "id": "ac562256.52a2a",
        "type": "switch",
        "z": "dedc2653.57a3d8",
        "name": "47402",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "47402",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 764,
        "y": 518,
        "wires": [
            [
                "a38e1625.a487e8"
            ]
        ]
    },
    {
        "id": "d90bebab.38de88",
        "type": "delay",
        "z": "41f52341.96686c",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 742,
        "y": 224,
        "wires": [
            [
                "2d6fec7d.944184"
            ]
        ]
    },
    {
        "id": "5baab153.3e4a4",
        "type": "ui_button",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "group": "d814a7db.5cdc38",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Kolla efter uppdateringar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 150,
        "y": 1380,
        "wires": [
            [
                "19b34a9a.741395"
            ]
        ]
    },
    {
        "id": "1503abff.27c9b4",
        "type": "ui_button",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "group": "d814a7db.5cdc38",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Installera",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "install",
        "x": 305,
        "y": 1484,
        "wires": [
            [
                "d50e6442.977348"
            ]
        ]
    },
    {
        "id": "8863a431.f38be8",
        "type": "ui_button",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "group": "4a7ab836.172ae8",
        "order": 3,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Starta Samba",
        "tooltip": "Startar fildelningsservern och sätter NibePi i skrivläge",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 415,
        "y": 2457,
        "wires": [
            [
                "c7ba3d3a.9fc47"
            ]
        ]
    },
    {
        "id": "7c970ca4.e53bb4",
        "type": "ui_button",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "group": "4a7ab836.172ae8",
        "order": 4,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Stoppa Samba",
        "tooltip": "Stoppar fildelningsservern och sätter NibePi i läsläge",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 416,
        "y": 2597,
        "wires": [
            [
                "1687716.fde818f"
            ]
        ]
    },
    {
        "id": "5bc2966c.2059e8",
        "type": "ui_button",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "group": "4a7ab836.172ae8",
        "order": 5,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Starta om NibePi kärnan",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 201,
        "y": 2751,
        "wires": [
            [
                "dffd293e.1ad458"
            ]
        ]
    },
    {
        "id": "a99ecaad.329118",
        "type": "ui_button",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "group": "4a7ab836.172ae8",
        "order": 6,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Starta om Node-RED",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Startar om Node-RED",
        "payloadType": "str",
        "topic": "",
        "x": 198,
        "y": 2835,
        "wires": [
            [
                "bca6a0a2.63d97",
                "4ea7d6bc.4e7168"
            ]
        ]
    },
    {
        "id": "44438af8.2cf0d4",
        "type": "ui_button",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "group": "4a7ab836.172ae8",
        "order": 7,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Starta om NibePi hårdvara",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Startar om Node-RED",
        "payloadType": "str",
        "topic": "",
        "x": 225,
        "y": 2905,
        "wires": [
            [
                "89c06450.933638"
            ]
        ]
    },
    {
        "id": "1d13a496.42fbeb",
        "type": "ui_dropdown",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "label": "Ta bort Register",
        "tooltip": "",
        "place": "Välj register",
        "group": "4f8b35d1.5c8fec",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "remove",
        "x": 745,
        "y": 826,
        "wires": [
            [
                "d8c999e2.2eeb08"
            ]
        ]
    },
    {
        "id": "e69f30bd.40f35",
        "type": "ui_dropdown",
        "z": "7e884fc9.b6c45",
        "name": "",
        "label": "Högt pris",
        "tooltip": "Varmvattenproduktion vid högt pris",
        "place": "Välj",
        "group": "2e9c7d75.ee6312",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "options": [
            {
                "label": "Ekonomi (0)",
                "value": "0",
                "type": "str"
            },
            {
                "label": "Normal (1)",
                "value": "1",
                "type": "str"
            },
            {
                "label": "Lyx (2)",
                "value": "2",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "hotwater_price_high",
        "x": 641,
        "y": 854,
        "wires": [
            [
                "56679770.c1bc78"
            ]
        ]
    },
    {
        "id": "63f053e8.0db86c",
        "type": "ui_dropdown",
        "z": "7e884fc9.b6c45",
        "name": "",
        "label": "Normalt pris",
        "tooltip": "Varmvattenproduktion vid normalt pris",
        "place": "Välj",
        "group": "2e9c7d75.ee6312",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "options": [
            {
                "label": "Ekonomi (0)",
                "value": "0",
                "type": "str"
            },
            {
                "label": "Normal (1)",
                "value": "1",
                "type": "str"
            },
            {
                "label": "Lyx (2)",
                "value": "2",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "hotwater_price_normal",
        "x": 651,
        "y": 903,
        "wires": [
            [
                "56679770.c1bc78"
            ]
        ]
    },
    {
        "id": "d18b0fda.6fbac",
        "type": "ui_dropdown",
        "z": "7e884fc9.b6c45",
        "name": "",
        "label": "Lågt pris",
        "tooltip": "Varmvattenproduktion vid lågt pris",
        "place": "Välj",
        "group": "2e9c7d75.ee6312",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "options": [
            {
                "label": "Ekonomi (0)",
                "value": "0",
                "type": "str"
            },
            {
                "label": "Normal (1)",
                "value": "1",
                "type": "str"
            },
            {
                "label": "Lyx (2)",
                "value": "2",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "hotwater_price_low",
        "x": 641,
        "y": 952,
        "wires": [
            [
                "56679770.c1bc78"
            ]
        ]
    },
    {
        "id": "a935dfb.6cf9f2",
        "type": "ui_dropdown",
        "z": "7e884fc9.b6c45",
        "name": "",
        "label": "Super lågt pris",
        "tooltip": "Varmvattenproduktion vid super lågt pris",
        "place": "Välj",
        "group": "2e9c7d75.ee6312",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "options": [
            {
                "label": "Ekonomi (0)",
                "value": "0",
                "type": "str"
            },
            {
                "label": "Normal (1)",
                "value": "1",
                "type": "str"
            },
            {
                "label": "Lyx (2)",
                "value": "2",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "hotwater_price_superlow",
        "x": 661,
        "y": 1001,
        "wires": [
            [
                "56679770.c1bc78"
            ]
        ]
    },
    {
        "id": "342ae14d.99583e",
        "type": "ui_switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "label": "Extern MQTT Broker",
        "tooltip": "",
        "group": "ed53104a.a7fac",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "mqtt",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 786,
        "y": 392,
        "wires": [
            [
                "1adfd7ff.d67468"
            ]
        ]
    },
    {
        "id": "675ff912.8423a8",
        "type": "ui_switch",
        "z": "a7a0164d.f58e58",
        "name": "",
        "label": "Automatisk lufthastighet",
        "tooltip": "",
        "group": "ad7a33f3.24adf",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "airflow",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 691,
        "y": 364,
        "wires": [
            [
                "33568b.ffedf974"
            ]
        ]
    },
    {
        "id": "378a4915.ce7e46",
        "type": "ui_switch",
        "z": "41f52341.96686c",
        "name": "",
        "label": "SMHI Prognos",
        "tooltip": "",
        "group": "810e862f.c36438",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "smhi",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 724,
        "y": 560,
        "wires": [
            [
                "ad882279.505e1"
            ]
        ]
    },
    {
        "id": "bbb2d0f.98e133",
        "type": "ui_switch",
        "z": "dedc2653.57a3d8",
        "name": "",
        "label": "Inomhusreglering",
        "tooltip": "",
        "group": "a2cfe148.70708",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "indoor",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 671,
        "y": 567,
        "wires": [
            [
                "a358e1d1.4e87"
            ]
        ]
    },
    {
        "id": "6fb31f69.895d1",
        "type": "ui_switch",
        "z": "7e884fc9.b6c45",
        "name": "",
        "label": "Elprisreglering med Tibber",
        "tooltip": "",
        "group": "f481a5f0.f9f1c8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "tibber",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 757,
        "y": 301,
        "wires": [
            [
                "d8c7691f.8b40b8"
            ]
        ]
    },
    {
        "id": "6b290d30.31bfd4",
        "type": "ui_switch",
        "z": "dedc2653.57a3d8",
        "name": "",
        "label": "Nibes Inomhusgivare",
        "tooltip": "",
        "group": "a2cfe148.70708",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "nibesensor",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 681,
        "y": 623,
        "wires": [
            [
                "93c66530.2e43d8"
            ]
        ]
    },
    {
        "id": "3a3f02b8.10d73e",
        "type": "ui_switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "label": "Debug log",
        "tooltip": "",
        "group": "89f97b1b.8278f8",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "debug",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 721,
        "y": 322,
        "wires": [
            [
                "ab38f4c.12d7608"
            ]
        ]
    },
    {
        "id": "234333b0.72007c",
        "type": "ui_switch",
        "z": "7e884fc9.b6c45",
        "name": "",
        "label": "Varmvattenreglering",
        "tooltip": "Vill du att varmvattnet ska reglera sig efter elpriset enligt nedan",
        "group": "2e9c7d75.ee6312",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "hotwater_active",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 681,
        "y": 1050,
        "wires": [
            [
                "56679770.c1bc78"
            ]
        ]
    },
    {
        "id": "9f14d280.2b3ec",
        "type": "ui_slider",
        "z": "a7a0164d.f58e58",
        "name": "",
        "label": "Lufthastighet Normal Börvärde",
        "tooltip": "",
        "group": "ad7a33f3.24adf",
        "order": 3,
        "width": "11",
        "height": "1",
        "passthru": false,
        "outs": "end",
        "topic": "setpoint_normal",
        "min": "0",
        "max": "350",
        "step": "1",
        "x": 914,
        "y": 406,
        "wires": [
            [
                "a775503.592a7b"
            ]
        ]
    },
    {
        "id": "7d7654e1.96954c",
        "type": "ui_slider",
        "z": "41f52341.96686c",
        "name": "",
        "label": "Prognostid",
        "tooltip": "",
        "group": "810e862f.c36438",
        "order": 6,
        "width": "11",
        "height": "1",
        "passthru": false,
        "outs": "end",
        "topic": "hours",
        "min": "0",
        "max": "24",
        "step": "1",
        "x": 511,
        "y": 777,
        "wires": [
            [
                "32ccf630.a0ca4a"
            ]
        ]
    },
    {
        "id": "705ed848.fa2f48",
        "type": "ui_slider",
        "z": "dedc2653.57a3d8",
        "name": "",
        "label": "Inomhus börvärde",
        "tooltip": "",
        "group": "a2cfe148.70708",
        "order": 7,
        "width": "11",
        "height": "1",
        "passthru": false,
        "outs": "end",
        "topic": "47398",
        "min": "8",
        "max": "26",
        "step": "0.5",
        "x": 937,
        "y": 420,
        "wires": [
            [
                "f453f85b.eda668"
            ]
        ]
    },
    {
        "id": "1e06d0c.d83dd2f",
        "type": "ui_slider",
        "z": "dedc2653.57a3d8",
        "name": "",
        "label": "Utomhustemp blockering",
        "tooltip": "",
        "group": "a2cfe148.70708",
        "order": 9,
        "width": "11",
        "height": "1",
        "passthru": false,
        "outs": "end",
        "topic": "47375",
        "min": "8",
        "max": "26",
        "step": "1",
        "x": 957,
        "y": 469,
        "wires": [
            [
                "f453f85b.eda668"
            ]
        ]
    },
    {
        "id": "a4d15c9a.e3c7d",
        "type": "ui_slider",
        "z": "7e884fc9.b6c45",
        "name": "",
        "label": "Högsta pris",
        "tooltip": "Hur många av de högsta prisnivåerna ska det justeras börvärde på?",
        "group": "f481a5f0.f9f1c8",
        "order": 4,
        "width": "11",
        "height": "1",
        "passthru": false,
        "outs": "end",
        "topic": "price_max",
        "min": "0",
        "max": "5",
        "step": 1,
        "x": 658,
        "y": 511,
        "wires": [
            [
                "56679770.c1bc78"
            ]
        ]
    },
    {
        "id": "5e63c432.130d9c",
        "type": "ui_slider",
        "z": "7e884fc9.b6c45",
        "name": "",
        "label": "Lägsta pris",
        "tooltip": "Hur många av de lägsta prisnivåerna ska det justeras börvärde på?",
        "group": "f481a5f0.f9f1c8",
        "order": 6,
        "width": "11",
        "height": "1",
        "passthru": false,
        "outs": "end",
        "topic": "price_min",
        "min": "0",
        "max": "5",
        "step": 1,
        "x": 658,
        "y": 560,
        "wires": [
            [
                "56679770.c1bc78"
            ]
        ]
    },
    {
        "id": "5fe6d87b.09b708",
        "type": "ui_slider",
        "z": "7e884fc9.b6c45",
        "name": "",
        "label": "Kurvjustering vid Högt pris",
        "tooltip": "Hur mycket ska kurvjusteringen vara när det är högt pris?",
        "group": "b561c5cd.249a58",
        "order": 1,
        "width": "11",
        "height": "1",
        "passthru": false,
        "outs": "end",
        "topic": "adjust_high",
        "min": "-10",
        "max": "0",
        "step": 1,
        "x": 691,
        "y": 658,
        "wires": [
            [
                "56679770.c1bc78"
            ]
        ]
    },
    {
        "id": "52879113.37138",
        "type": "ui_slider",
        "z": "7e884fc9.b6c45",
        "name": "",
        "label": "Kurvjustering vid Lågt pris",
        "tooltip": "Hur mycket ska kurvjusteringen vara när det är lågt pris?",
        "group": "b561c5cd.249a58",
        "order": 3,
        "width": "11",
        "height": "1",
        "passthru": false,
        "outs": "end",
        "topic": "adjust_low",
        "min": "0",
        "max": 10,
        "step": 1,
        "x": 691,
        "y": 707,
        "wires": [
            [
                "56679770.c1bc78"
            ]
        ]
    },
    {
        "id": "f0b9c693.212c58",
        "type": "ui_slider",
        "z": "7e884fc9.b6c45",
        "name": "",
        "label": "Minsta prisdifferens",
        "tooltip": "Minsta differens mellan lägsta och högsta pris för att reglering ska ske",
        "group": "f481a5f0.f9f1c8",
        "order": 10,
        "width": "11",
        "height": "1",
        "passthru": false,
        "outs": "end",
        "topic": "adjust_active",
        "min": "0",
        "max": "100",
        "step": 1,
        "x": 671,
        "y": 805,
        "wires": [
            [
                "56679770.c1bc78"
            ]
        ]
    },
    {
        "id": "d7bbffae.a1a68",
        "type": "ui_slider",
        "z": "7e884fc9.b6c45",
        "name": "",
        "label": "Super lågt pris",
        "tooltip": "Under vilket pris är ett super lågt pris där systemet ska öka produktionen",
        "group": "f481a5f0.f9f1c8",
        "order": 8,
        "width": "11",
        "height": "1",
        "passthru": false,
        "outs": "end",
        "topic": "price_low",
        "min": "0",
        "max": "100",
        "step": 1,
        "x": 661,
        "y": 609,
        "wires": [
            [
                "56679770.c1bc78"
            ]
        ]
    },
    {
        "id": "98927d22.9c10d",
        "type": "ui_slider",
        "z": "7e884fc9.b6c45",
        "name": "",
        "label": "Kurvjustering vid Super lågt pris",
        "tooltip": "Hur mycket ska kurvjusteringen vara när det är super lågt pris?",
        "group": "b561c5cd.249a58",
        "order": 5,
        "width": "11",
        "height": "1",
        "passthru": false,
        "outs": "end",
        "topic": "adjust_superlow",
        "min": "0",
        "max": 10,
        "step": 1,
        "x": 711,
        "y": 756,
        "wires": [
            [
                "56679770.c1bc78"
            ]
        ]
    },
    {
        "id": "a38e1625.a487e8",
        "type": "ui_slider",
        "z": "dedc2653.57a3d8",
        "name": "",
        "label": "Faktor för Inomhusgivare",
        "tooltip": "Ställ in hur mycket inomhus givare ska påverka framledningstemperaturen.",
        "group": "a2cfe148.70708",
        "order": 8,
        "width": "11",
        "height": "1",
        "passthru": false,
        "outs": "end",
        "topic": "47402",
        "min": "0",
        "max": "6",
        "step": "0.1",
        "x": 964,
        "y": 518,
        "wires": [
            [
                "f453f85b.eda668"
            ]
        ]
    },
    {
        "id": "2fde2d1c.371fe2",
        "type": "ui_text_input",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "label": "MQTT Topic",
        "tooltip": "",
        "group": "ed53104a.a7fac",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "defaultTopic",
        "x": 588,
        "y": 700,
        "wires": [
            [
                "f86a78bd.8e2088"
            ]
        ]
    },
    {
        "id": "608dd9cd.f906c8",
        "type": "ui_text_input",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "label": "MQTT Port",
        "tooltip": "",
        "group": "ed53104a.a7fac",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "port",
        "x": 396,
        "y": 994,
        "wires": [
            [
                "674eb780.7d3f48"
            ]
        ]
    },
    {
        "id": "8c131446.9508f8",
        "type": "ui_text_input",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "label": "MQTT Username",
        "tooltip": "",
        "group": "ed53104a.a7fac",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "username",
        "x": 416,
        "y": 1036,
        "wires": [
            [
                "674eb780.7d3f48"
            ]
        ]
    },
    {
        "id": "13b9bd4f.27e183",
        "type": "ui_text_input",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "label": "MQTT Password",
        "tooltip": "",
        "group": "ed53104a.a7fac",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "password",
        "delay": "0",
        "topic": "password",
        "x": 416,
        "y": 1078,
        "wires": [
            [
                "674eb780.7d3f48"
            ]
        ]
    },
    {
        "id": "1c132ce4.f75973",
        "type": "ui_text_input",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "label": "MQTT Host",
        "tooltip": "",
        "group": "ed53104a.a7fac",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "host",
        "x": 399,
        "y": 952,
        "wires": [
            [
                "674eb780.7d3f48"
            ]
        ]
    },
    {
        "id": "b6165c50.d7caf",
        "type": "ui_text_input",
        "z": "dedc2653.57a3d8",
        "name": "MQTT Topic text",
        "label": "",
        "tooltip": "",
        "group": "a2cfe148.70708",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "mqttsensor",
        "x": 900,
        "y": 840,
        "wires": [
            [
                "93c66530.2e43d8"
            ]
        ]
    },
    {
        "id": "d1822448.a94508",
        "type": "ui_text_input",
        "z": "41f52341.96686c",
        "name": "",
        "label": "Latitud",
        "tooltip": "",
        "group": "810e862f.c36438",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "lat",
        "x": 862,
        "y": 644,
        "wires": [
            [
                "32ccf630.a0ca4a"
            ]
        ]
    },
    {
        "id": "5c1a9f37.0bc6e",
        "type": "ui_text_input",
        "z": "41f52341.96686c",
        "name": "",
        "label": "Longitud",
        "tooltip": "",
        "group": "810e862f.c36438",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "lon",
        "x": 872,
        "y": 679,
        "wires": [
            [
                "32ccf630.a0ca4a"
            ]
        ]
    },
    {
        "id": "8cf2b5f5.630338",
        "type": "ui_text_input",
        "z": "41f52341.96686c",
        "name": "",
        "label": "Klart väder",
        "tooltip": "",
        "group": "d342c0ba.f2418",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "clear",
        "x": 885,
        "y": 763,
        "wires": [
            [
                "32ccf630.a0ca4a"
            ]
        ]
    },
    {
        "id": "a952672d.a041c8",
        "type": "ui_text_input",
        "z": "41f52341.96686c",
        "name": "",
        "label": "Mestadels klart väder",
        "tooltip": "",
        "group": "d342c0ba.f2418",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "mostly_clear",
        "x": 919,
        "y": 805,
        "wires": [
            [
                "32ccf630.a0ca4a"
            ]
        ]
    },
    {
        "id": "ada4442e.d6a878",
        "type": "ui_text_input",
        "z": "41f52341.96686c",
        "name": "",
        "label": "Halvklart väder",
        "tooltip": "",
        "group": "d342c0ba.f2418",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "number",
        "delay": "0",
        "topic": "half_clear",
        "x": 899,
        "y": 847,
        "wires": [
            [
                "32ccf630.a0ca4a"
            ]
        ]
    },
    {
        "id": "9f663e1e.885b6",
        "type": "ui_text_input",
        "z": "7e884fc9.b6c45",
        "name": "",
        "label": "Tibber Token",
        "tooltip": "",
        "group": "f481a5f0.f9f1c8",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "token",
        "x": 910,
        "y": 441,
        "wires": [
            [
                "56679770.c1bc78"
            ]
        ]
    },
    {
        "id": "efe85654.54bba8",
        "type": "ui_text",
        "z": "41f52341.96686c",
        "group": "810e862f.c36438",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "{{msg.topic}}",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1281,
        "y": 140,
        "wires": []
    },
    {
        "id": "e10cbbfe.72daf8",
        "type": "ui_text",
        "z": "a7a0164d.f58e58",
        "group": "ad7a33f3.24adf",
        "order": 7,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Ärvärde",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1260,
        "y": 420,
        "wires": []
    },
    {
        "id": "4460715e.f373d",
        "type": "ui_text",
        "z": "a7a0164d.f58e58",
        "group": "ad7a33f3.24adf",
        "order": 8,
        "width": "4",
        "height": "1",
        "name": "",
        "label": "Fläkthastighet",
        "format": "{{msg.payload}}%",
        "layout": "row-left",
        "x": 1260,
        "y": 500,
        "wires": []
    },
    {
        "id": "436e890f.3ad428",
        "type": "ui_text",
        "z": "7e884fc9.b6c45",
        "group": "90803197.41c34",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Elpris: ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 988,
        "y": 91,
        "wires": []
    },
    {
        "id": "fc7820a4.43483",
        "type": "ui_chart",
        "z": "41f52341.96686c",
        "name": "",
        "group": "7e910a08.c6c984",
        "order": 1,
        "width": "0",
        "height": "0",
        "label": "Temperaturer",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1250,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "d1eba932.145588",
        "type": "ui_chart",
        "z": "a7a0164d.f58e58",
        "name": "",
        "group": "ad7a33f3.24adf",
        "order": 9,
        "width": "12",
        "height": "12",
        "label": "Lufthastighet",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1274,
        "y": 602,
        "wires": [
            []
        ]
    },
    {
        "id": "dbdce37e.8b558",
        "type": "ui_chart",
        "z": "dedc2653.57a3d8",
        "name": "",
        "group": "53b18b65.7718c4",
        "order": 1,
        "width": "0",
        "height": "0",
        "label": "Temperaturer",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1130,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "60ad58d5.7422c8",
        "type": "ui_chart",
        "z": "7e884fc9.b6c45",
        "name": "",
        "group": "90803197.41c34",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Kostnad",
        "chartType": "line",
        "legend": "true",
        "xformat": "dd HH:mm",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "48",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1120,
        "y": 20,
        "wires": [
            [
                "dd86ab18.aab248"
            ]
        ]
    },
    {
        "id": "e12c845b.003a68",
        "type": "ui_chart",
        "z": "7e884fc9.b6c45",
        "name": "",
        "group": "90803197.41c34",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Förbrukning",
        "chartType": "line",
        "legend": "true",
        "xformat": "dd HH:mm",
        "interpolate": "bezier",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "48",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1162,
        "y": 63,
        "wires": [
            []
        ]
    },
    {
        "id": "a858843a.2748e8",
        "type": "ui_toast",
        "z": "ade2c7a9.e97ba8",
        "position": "bottom right",
        "displayTime": "5",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "",
        "x": 870,
        "y": 1220,
        "wires": []
    },
    {
        "id": "4ea7d6bc.4e7168",
        "type": "ui_toast",
        "z": "ade2c7a9.e97ba8",
        "position": "bottom right",
        "displayTime": "3",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "",
        "x": 1267,
        "y": 2548,
        "wires": []
    },
    {
        "id": "4ceb17d1.eea6d8",
        "type": "ui_template",
        "z": "ade2c7a9.e97ba8",
        "group": "89f97b1b.8278f8",
        "name": "Visa logg knapp",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<button onclick=\"redirect()\">Visa logfil</button>\n<script>\nvar redirect = function(){\nwindow.location.href = \"../log/nodered.log\";\n}\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 916,
        "y": 224,
        "wires": [
            []
        ]
    },
    {
        "id": "bf49e0e6.35bdf",
        "type": "ui_template",
        "z": "ade2c7a9.e97ba8",
        "group": "89f97b1b.8278f8",
        "name": "Logg information",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div>OBS. Loggning bör endast utföras en kortare period (Max 1h).<br>\nAll information sparas till minnet och försvinner vid en omstart av hårdvaran.\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 670,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "6664c578.0da70c",
        "type": "ui_template",
        "z": "ade2c7a9.e97ba8",
        "group": "d814a7db.5cdc38",
        "name": "Uppdatering Förtext",
        "order": 1,
        "width": "12",
        "height": "2",
        "format": "<div>Kolla efter uppdateringar för NibePi mjukvaran.<br>\nOBS. efter uppdateringen startar mjukvaran om och larm om Kom.avbrott kommer att genereras på pumpen.<br>\nVid uppstart återställs detta.\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 1143,
        "y": 1414,
        "wires": [
            []
        ]
    },
    {
        "id": "a71fc0a0.cbad4",
        "type": "ui_template",
        "z": "ade2c7a9.e97ba8",
        "group": "4a7ab836.172ae8",
        "name": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<br>Värmepump: Nibe {{msg.payload.pump}}<br>\nFirmware: {{msg.payload.firmware}}<br>\nNibePi Version: {{msg.payload.version}}",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 520,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "ca1c457e.642ea8",
        "type": "ui_template",
        "z": "ade2c7a9.e97ba8",
        "group": "ed53104a.a7fac",
        "name": "MQTT Info",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div>\n    Anslut en egen MQTT broker.\n    Välj vilket topic data ska publiceras under. T.ex register 43005 (Gradminuter) kommer att publiceras på\n    nibe/modbus/43005.<br>\n    Vill du skriva data skickar man värdet man vill skriva med /set på slutet.<br>\n    Exempelvis topic nibe/modbus/43005/set\n    \n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 248,
        "y": 1113,
        "wires": [
            []
        ]
    },
    {
        "id": "7c041900.6396f8",
        "type": "ui_template",
        "z": "ade2c7a9.e97ba8",
        "group": "4f8b35d1.5c8fec",
        "name": "Register Info",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<div>\n    Välj i listan vilket register som ska hämtas data från.<br>\n    Register märkta (R/W) är även skrivbara.\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 987,
        "y": 693,
        "wires": [
            []
        ]
    },
    {
        "id": "c0b8e7fc.8ee788",
        "type": "ui_template",
        "z": "41f52341.96686c",
        "group": "d342c0ba.f2418",
        "name": "SMHI Solfaktor Info",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "Hur mycket ska solen påverka prognosstyrningen?<br>\nStäll in en faktor under varje alternativ.<br>\nVärdet ska symbolisera antal grader som du anser att temperaturen höjs utomhus.<br>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1224,
        "y": 770,
        "wires": [
            []
        ]
    },
    {
        "id": "a95559b9.c53f88",
        "type": "ui_template",
        "z": "7e884fc9.b6c45",
        "group": "f481a5f0.f9f1c8",
        "name": "Token text",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "På den här sidan kan du hämta ditt Tibber token.<br>\nhttps://developer.tibber.com/settings/accesstoken<br>\n<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 630,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "d3e7b620.1b5828",
        "type": "ui_list",
        "z": "ade2c7a9.e97ba8",
        "group": "4f8b35d1.5c8fec",
        "name": "",
        "order": 3,
        "width": "12",
        "height": "12",
        "lineType": "three",
        "actionType": "check",
        "allowHTML": false,
        "outputs": 1,
        "x": 1027,
        "y": 609,
        "wires": [
            [
                "ad071f9c.747ff",
                "b69122fd.049d2"
            ]
        ]
    },
    {
        "id": "dd86ab18.aab248",
        "type": "debug",
        "z": "7e884fc9.b6c45",
        "name": "Utgående",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1160,
        "y": 380,
        "wires": []
    },
    {
        "id": "ef9345be.279118",
        "type": "debug",
        "z": "7e884fc9.b6c45",
        "name": "Utgående",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1160,
        "y": 420,
        "wires": []
    },
    {
        "id": "5c99e36c.80d42c",
        "type": "inject",
        "z": "7e884fc9.b6c45",
        "name": "",
        "topic": "",
        "payload": "[]",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 610,
        "y": 60,
        "wires": [
            [
                "60ad58d5.7422c8"
            ]
        ]
    },
    {
        "id": "7500426e.4f401c",
        "type": "ui_text_input",
        "z": "ade2c7a9.e97ba8",
        "name": "Pump manuell",
        "label": "Pump: ",
        "tooltip": "Vid problem med autodetektering, skriv in pumpens modell manuellt. T.ex. \"F1255\"",
        "group": "4a7ab836.172ae8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "pump",
        "x": 840,
        "y": 480,
        "wires": [
            [
                "b6d60ac6.a4d8d8"
            ]
        ]
    },
    {
        "id": "3cf2e9a5.ebb2c6",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.pump",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 460,
        "wires": [
            [
                "7500426e.4f401c"
            ]
        ]
    },
    {
        "id": "d7caab2f.99b4c8",
        "type": "change",
        "z": "7e884fc9.b6c45",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 340,
        "wires": [
            [
                "a95559b9.c53f88"
            ]
        ]
    },
    {
        "id": "511d1c67.799404",
        "type": "ui_template",
        "z": "ade2c7a9.e97ba8",
        "group": "d814a7db.5cdc38",
        "name": "Uppdatering Info",
        "order": 4,
        "width": "12",
        "height": "4",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1110,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "a789fa9f.2df8c8",
        "type": "catch",
        "z": "dedc2653.57a3d8",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 440,
        "y": 140,
        "wires": [
            [
                "17f19d39.abe963",
                "6217c050.4fe78"
            ]
        ]
    },
    {
        "id": "17f19d39.abe963",
        "type": "ui_toast",
        "z": "dedc2653.57a3d8",
        "position": "bottom right",
        "displayTime": "7",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "",
        "x": 690,
        "y": 140,
        "wires": []
    },
    {
        "id": "5e479433.4ccbfc",
        "type": "trigger",
        "z": "dedc2653.57a3d8",
        "op1": "",
        "op2": "false",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "60",
        "extend": true,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "name": "MQTT Sensor Timeout",
        "x": 460,
        "y": 960,
        "wires": [
            [
                "dfb4deae.88a6c"
            ]
        ]
    },
    {
        "id": "dfb4deae.88a6c",
        "type": "function",
        "z": "dedc2653.57a3d8",
        "name": "",
        "func": "var config = global.get('config');\nif(config===undefined) { return; }\nif(msg.payload===false) {\n    if(config.plugins.indoor.mqttsensor_value!==undefined && config.plugins.indoor.mqttsensor_value===true) {\n        node.error('Inomhusreglering',{topic:\"Inomhusreglering\",payload:\"MQTT Givare har tappat kontakten.\"})\n    }\n    global.set('data.mqttSensor',undefined)\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "6217c050.4fe78",
        "type": "debug",
        "z": "dedc2653.57a3d8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 580,
        "y": 200,
        "wires": []
    },
    {
        "id": "e8c49fa7.8dc56",
        "type": "ui_button",
        "z": "41f52341.96686c",
        "name": "",
        "group": "7e910a08.c6c984",
        "order": 3,
        "width": "12",
        "height": "1",
        "passthru": false,
        "label": "Rensa graf",
        "tooltip": "Rensar grafen och börjar om på nytt",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 890,
        "y": 60,
        "wires": [
            [
                "4b5e2638.2de288"
            ]
        ]
    },
    {
        "id": "4b5e2638.2de288",
        "type": "change",
        "z": "41f52341.96686c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 60,
        "wires": [
            [
                "fc7820a4.43483",
                "2bba5142.49adee"
            ]
        ]
    },
    {
        "id": "2bba5142.49adee",
        "type": "delay",
        "z": "41f52341.96686c",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 860,
        "y": 120,
        "wires": [
            [
                "1a39ce8.60f2732"
            ]
        ]
    },
    {
        "id": "27459619.2a465a",
        "type": "catch",
        "z": "41f52341.96686c",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 420,
        "y": 40,
        "wires": [
            [
                "8c1d1ff2.df531",
                "3d229b2d.b76bf4"
            ]
        ]
    },
    {
        "id": "8c1d1ff2.df531",
        "type": "ui_toast",
        "z": "41f52341.96686c",
        "position": "bottom right",
        "displayTime": "7",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "",
        "x": 670,
        "y": 40,
        "wires": []
    },
    {
        "id": "3d229b2d.b76bf4",
        "type": "debug",
        "z": "41f52341.96686c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 560,
        "y": 100,
        "wires": []
    },
    {
        "id": "2fc2369b.5811da",
        "type": "ui_button",
        "z": "41f52341.96686c",
        "name": "",
        "group": "7e910a08.c6c984",
        "order": 2,
        "width": "12",
        "height": "1",
        "passthru": false,
        "label": "Uppdatera",
        "tooltip": "Begär ny väderdata och uppdatera grafen med nya värden.",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 170,
        "y": 360,
        "wires": [
            [
                "1a39ce8.60f2732"
            ]
        ]
    },
    {
        "id": "7532efb4.f5af6",
        "type": "debug",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 380,
        "y": 1880,
        "wires": []
    },
    {
        "id": "4274466a.ee8098",
        "type": "catch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 220,
        "y": 1880,
        "wires": [
            [
                "7532efb4.f5af6",
                "9dad4fe.4e1f1b"
            ]
        ]
    },
    {
        "id": "9dad4fe.4e1f1b",
        "type": "ui_toast",
        "z": "ade2c7a9.e97ba8",
        "position": "bottom right",
        "displayTime": "7",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "",
        "x": 420,
        "y": 1920,
        "wires": []
    },
    {
        "id": "4af779bd.44f368",
        "type": "delay",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1320,
        "y": 1880,
        "wires": [
            [
                "5b467146.2e43a"
            ]
        ]
    },
    {
        "id": "6df53909.ff0088",
        "type": "ui_button",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "group": "d814a7db.5cdc38",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Återställ Backup",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "restore",
        "x": 160,
        "y": 2100,
        "wires": [
            [
                "9a8d676.7f37898"
            ]
        ]
    },
    {
        "id": "9a8d676.7f37898",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "sudo mount -o remount,rw /",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 428,
        "y": 2105,
        "wires": [
            [],
            [],
            [
                "cf7a9956.7f0d68"
            ]
        ]
    },
    {
        "id": "cf7a9956.7f0d68",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 650,
        "y": 2120,
        "wires": [
            [
                "557e5528.03745c"
            ]
        ]
    },
    {
        "id": "557e5528.03745c",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "cp /home/pi/.node-red/flows_saved.bak /home/pi/.node-red/flows.json && cp /home/pi/.nibepi/heatpump_saved.js /home/pi/.nibepi/heatpump.js",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Återställ backup",
        "x": 840,
        "y": 2120,
        "wires": [
            [],
            [],
            [
                "ba009915.da27e8"
            ]
        ]
    },
    {
        "id": "ba009915.da27e8",
        "type": "function",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "func": "if(msg.payload.code===0) {\n    node.error('Uppdatering',{topic:\"Uppdatering\",payload:\"Backup återställd! Startar om...\"})\n    node.send({payload:true});\n} else {\n    node.error('Uppdatering',{topic:\"Uppdatering\",payload:\"Fel. Backup inte återställd.\"})\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 1010,
        "y": 2120,
        "wires": [
            [
                "4af779bd.44f368"
            ]
        ]
    },
    {
        "id": "68b1d3a4.167bfc",
        "type": "ui_template",
        "z": "41f52341.96686c",
        "group": "810e862f.c36438",
        "name": "SMHI Lat long info",
        "order": 7,
        "width": 0,
        "height": 0,
        "format": "Ange koordinater med tre decimaler och punkt. T.ex 59.221 16.226",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 930,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "ee55f1c9.ec242",
        "type": "ui_template",
        "z": "41f52341.96686c",
        "group": "810e862f.c36438",
        "name": "SMHI Prognosinfo",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "Ange hur långt fram i prognosen det ska regleras för.<br>\nNibePi kommer reglera värmepumpen efter prognostemperaturen istället.",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 310,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "7d7d054.01743fc",
        "type": "ui_template",
        "z": "41f52341.96686c",
        "group": "d342c0ba.f2418",
        "name": "SMHI Solfaktor Info 2",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "Solfaktor är ett fiktivt värde och ska ses mer som ett värde än som en temperatur.<br>\nUpplevs det att huset värms upp för mycket i förhand på t.ex en solig dag så går det att höja värdet.<br>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1240,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "97ec4820.5d7af8",
        "type": "ui_button",
        "z": "dedc2653.57a3d8",
        "name": "",
        "group": "53b18b65.7718c4",
        "order": 3,
        "width": "12",
        "height": "1",
        "passthru": false,
        "label": "Rensa graf",
        "tooltip": "Rensar grafen och börjar om på nytt",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 950,
        "y": 140,
        "wires": [
            [
                "b797333f.f71aa"
            ]
        ]
    },
    {
        "id": "c017e4cc.4b89e8",
        "type": "ui_button",
        "z": "dedc2653.57a3d8",
        "name": "",
        "group": "53b18b65.7718c4",
        "order": 2,
        "width": "12",
        "height": "1",
        "passthru": false,
        "label": "Uppdatera",
        "tooltip": "Begär ny väderdata och uppdatera grafen med nya värden.",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 290,
        "y": 460,
        "wires": [
            [
                "70eee642.4248f8"
            ]
        ]
    },
    {
        "id": "b797333f.f71aa",
        "type": "change",
        "z": "dedc2653.57a3d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 160,
        "wires": [
            [
                "dbdce37e.8b558"
            ]
        ]
    },
    {
        "id": "73b40cb7.7af494",
        "type": "ui_template",
        "z": "dedc2653.57a3d8",
        "group": "a2cfe148.70708",
        "name": "MQTT Givare info",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "Välj nedan vilka givare du vill använda dig av att reglera efter<br>\nVäljer du flera givare så kommer ett medelvärde tas från dem<br>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 970,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "56e21969.1455d8",
        "type": "ui_switch",
        "z": "dedc2653.57a3d8",
        "name": "",
        "label": "Nibes Frånluftsgivare",
        "tooltip": "",
        "group": "a2cfe148.70708",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "exhaustsensor",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 680,
        "y": 680,
        "wires": [
            [
                "93c66530.2e43d8",
                "2a6987bb.e5c598"
            ]
        ]
    },
    {
        "id": "8f904fa0.731f3",
        "type": "change",
        "z": "dedc2653.57a3d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.indoor.exhaustsensor",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 680,
        "wires": [
            [
                "56e21969.1455d8"
            ]
        ]
    },
    {
        "id": "20313b53.14e214",
        "type": "switch",
        "z": "dedc2653.57a3d8",
        "name": "40025",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "40025",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 790,
        "y": 360,
        "wires": [
            [
                "f9d72f35.c1936"
            ]
        ]
    },
    {
        "id": "f9d72f35.c1936",
        "type": "function",
        "z": "dedc2653.57a3d8",
        "name": "",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined || data===undefined) return;\n\nif(Number(msg.payload)<-100) {\n    node.send([null,{topic:\"nibe/register/remove\",payload:msg.topic}])\n    data[msg.topic] = undefined;\n    global.set('data',data);\n    if(msg.topic==\"40025\") {\n        config.plugins.indoor.exhaustsensor = false;\n        node.send({topic:\"nibe/config/set\",payload:JSON.stringify(config)})\n        node.error('Inomhusreglering',{topic:\"Inomhusreglering\",payload:\"Frånluftsgivare är ej installerad.\"})\n    } else if(msg.topic==\"40033\") {\n        config.plugins.indoor.nibesensor = false;\n        node.send({topic:\"nibe/config/set\",payload:JSON.stringify(config)})\n        node.error('Inomhusreglering',{topic:\"Inomhusreglering\",payload:\"Inomhusgivare är ej installerad.\"})\n    }\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 950,
        "y": 320,
        "wires": [
            [
                "fd9604aa.eda248"
            ],
            [
                "19f0fd3e.e47cc3"
            ]
        ]
    },
    {
        "id": "2a6987bb.e5c598",
        "type": "function",
        "z": "dedc2653.57a3d8",
        "name": "",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined || data===undefined) return;\n\nif(msg.payload===true) {\n    node.send({topic:\"nibe/register/add\",payload:\"40025\"})\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 680,
        "wires": [
            [
                "19f0fd3e.e47cc3"
            ]
        ]
    },
    {
        "id": "19f0fd3e.e47cc3",
        "type": "delay",
        "z": "dedc2653.57a3d8",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1140,
        "y": 380,
        "wires": [
            [
                "fd9604aa.eda248"
            ]
        ]
    },
    {
        "id": "44421281.ed45dc",
        "type": "switch",
        "z": "dedc2653.57a3d8",
        "name": "40033",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "40033",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 790,
        "y": 320,
        "wires": [
            [
                "f9d72f35.c1936"
            ]
        ]
    },
    {
        "id": "b5a2e8e9.b9f908",
        "type": "ui_switch",
        "z": "dedc2653.57a3d8",
        "name": "",
        "label": "MQTT Givare",
        "tooltip": "",
        "group": "a2cfe148.70708",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "mqttsensor_value",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 660,
        "y": 740,
        "wires": [
            [
                "93c66530.2e43d8",
                "5e479433.4ccbfc"
            ]
        ]
    },
    {
        "id": "7cdd1090.5dc0a",
        "type": "change",
        "z": "dedc2653.57a3d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.indoor.mqttsensor_value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 740,
        "wires": [
            [
                "b5a2e8e9.b9f908"
            ]
        ]
    },
    {
        "id": "d7bb706.040b29",
        "type": "inject",
        "z": "dedc2653.57a3d8",
        "name": "Uppstart",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "x": 200,
        "y": 980,
        "wires": [
            [
                "5e479433.4ccbfc"
            ]
        ]
    },
    {
        "id": "2ad75e0a.a1f242",
        "type": "ui_slider",
        "z": "41f52341.96686c",
        "name": "",
        "label": "Norr ",
        "tooltip": "",
        "group": "455ba55e.e91e8c",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "wind_factor_n",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 400,
        "y": 1092,
        "wires": [
            [
                "32ccf630.a0ca4a"
            ]
        ]
    },
    {
        "id": "35b9f0e2.9255f",
        "type": "ui_slider",
        "z": "41f52341.96686c",
        "name": "",
        "label": "Söder",
        "tooltip": "",
        "group": "455ba55e.e91e8c",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "wind_factor_s",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 401,
        "y": 1141,
        "wires": [
            [
                "32ccf630.a0ca4a"
            ]
        ]
    },
    {
        "id": "e61e01fd.c9eff",
        "type": "ui_slider",
        "z": "41f52341.96686c",
        "name": "",
        "label": "Väst ",
        "tooltip": "",
        "group": "455ba55e.e91e8c",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "wind_factor_w",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 401,
        "y": 1190,
        "wires": [
            [
                "32ccf630.a0ca4a"
            ]
        ]
    },
    {
        "id": "b548fa71.925bb8",
        "type": "ui_slider",
        "z": "41f52341.96686c",
        "name": "",
        "label": "Öst  ",
        "tooltip": "",
        "group": "455ba55e.e91e8c",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "wind_factor_e",
        "min": 0,
        "max": 10,
        "step": "0.1",
        "x": 401,
        "y": 1239,
        "wires": [
            [
                "32ccf630.a0ca4a"
            ]
        ]
    },
    {
        "id": "a415f07f.088b5",
        "type": "ui_chart",
        "z": "41f52341.96686c",
        "name": "",
        "group": "455ba55e.e91e8c",
        "order": 2,
        "width": "0",
        "height": "0",
        "label": "Vindprognos",
        "chartType": "line",
        "legend": "true",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "48",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 952,
        "y": 1043,
        "wires": [
            []
        ]
    },
    {
        "id": "e39f5451.3a0378",
        "type": "function",
        "z": "41f52341.96686c",
        "name": "",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined) {\n    node.error('Prognosreglering',{topic:\"Prognosreglering\",payload:\"Saknar config fil.\"})\n    return;\n} if(data===undefined) {\n    node.error('Prognosreglering',{topic:\"Prognosreglering\",payload:\"Data har inte inkommit än.\"})\n    return;\n}\nvar hours = (config.plugins.smhi.hours-1);\n\n\n//var wind_speed = msg.payload.timeSeries[hours].parameters.find(wind_speed => wind_speed.name == \"ws\");\n//var wind_gust = msg.payload.timeSeries[hours].parameters.find(wind_gust => wind_gust.name == \"gust\");\n//var wind_dir = msg.payload.timeSeries[hours].parameters.find(wind_dir => wind_dir.name == \"wd\");\n\nvar array = msg.payload.timeSeries;\n\nvar tempOutside = data[40004];\nvar tempInside = data.tempInside;\nvar heatCurve = data[47007];\nvar setOffset;\n//var factor;\nif(tempOutside===undefined || heatCurve===undefined) {\n    node.error('Prognosreglering',{topic:\"Prognosreglering\",payload:\"Saknar värde från utomhusgivaren eller värmekurvan.\"});\n    return;\n}\ntempOutside = Number(tempOutside);\n//node.warn(tempOutside)\ntempInside = Number(tempInside);\nheatCurve = Number(heatCurve);\n//setOffset = Number(((tempOutside)*(heatCurve*1.2/10)/((heatCurve/10)+1)).toFixed(2));\nvar wind_speed_arr = [];\nvar wind_gust_arr = [];\nvar temp_arr = [];\nvar feel_arr = [];\nvar direction_arr = [];\nfor( var o = 0; o < 49; o++){\n    let timestamp = toTimestamp(array[o].validTime)\n    let topic = \"Vind\"\n    let speed = array[o].parameters.find(speed => speed.name == \"ws\");\n    let dir = array[o].parameters.find(dir => dir.name == \"wd\");\n    let gust = array[o].parameters.find(gust => gust.name == \"gust\");\n    let temp = array[o].parameters.find(temp => temp.name == \"t\");\n    speed = speed.values[0];\n    gust = gust.values[0];\n    temp = temp.values[0];\n    dir = dir.values[0];\n    let direction = 0;\n    let factor = 1;\n    if(((1 <= dir) && (dir <= 45)) || ((315 <= dir) && (dir <= 360))) {\n        direction = -1;\n        factor = config.plugins.smhi.wind_factor_n;\n    } else if(136 <= dir && dir <= 225) {\n        direction = -2;\n        factor = config.plugins.smhi.wind_factor_s;\n    } else if(226 <= dir && dir <= 314) {\n        direction = -3;\n        factor = config.plugins.smhi.wind_factor_w;\n    } else if(46 <= dir && dir <= 135) {\n        direction = -4;\n        factor = config.plugins.smhi.wind_factor_e;\n    }\n    let v = Math.pow(speed, 0.16);\n    feel = Number((13.12+(0.6215*temp)-(13.956*v)+(0.48669*temp*v)).toFixed(2));\n    if(feel>0) {\n        feel = feel/factor;\n        if(feel>temp) {\n            feel = temp;\n        }\n    } else {\n        feel = feel*factor\n        if(feel>temp) {\n            feel = temp;\n        }\n    }\n    if(speed<2 || temp>10 || speed>35 || direction===0) feel = temp;\n    wind_speed_arr.push({x:timestamp,y:Number(speed)});\n    wind_gust_arr.push({x:timestamp,y:Number(gust)});\n    temp_arr.push({x:timestamp,y:Number(temp)});\n    feel_arr.push({x:timestamp,y:feel});\n    direction_arr.push({x:timestamp,y:direction});\n    if(config.plugins.smhi.wind_active!==undefined && config.plugins.smhi.wind_active===true) {\n        if(o===hours) {\n            global.set('windSet',feel);\n        }\n    } else {\n        global.set('windSet',undefined);\n    }\n}\n//var test = wind_speed_arr.sort(function(a,b){return a.x - b.y});\nwind_speed_arr.sort((a, b) => (a.x > b.x) ? 1 : -1)\nwind_gust_arr.sort((a, b) => (a.x > b.x) ? 1 : -1)\ntemp_arr.sort((a, b) => (a.x > b.x) ? 1 : -1)\nfeel_arr.sort((a, b) => (a.x > b.x) ? 1 : -1)\ndirection_arr.sort((a, b) => (a.x > b.x) ? 1 : -1)\nvar sendArray = [\n    {\n        \"series\":[\"Vindhastighet\",\"Byvind\",\"Utomhustemp\",\"Köldeffekt\",\"Riktning\"],\n        \"data\":[wind_speed_arr,wind_gust_arr,temp_arr,feel_arr,direction_arr],\n        \"labels\":[\"Vindhastighet\",\"Byvind\",\"Utomhustemp\",\"Köldeffekt\",\"Riktning\"]\n    }];\nnode.send({topic:\"Vindhastighet\",payload:sendArray});\nfunction toTimestamp(strDate){\n var datum = Date.parse(strDate);\n return Number((datum).toFixed());\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 764,
        "y": 1050,
        "wires": [
            [
                "a415f07f.088b5"
            ]
        ]
    },
    {
        "id": "4cad4316.86438c",
        "type": "ui_button",
        "z": "41f52341.96686c",
        "name": "",
        "group": "455ba55e.e91e8c",
        "order": 5,
        "width": "12",
        "height": "1",
        "passthru": false,
        "label": "Rensa graf",
        "tooltip": "Rensar grafen och börjar om på nytt",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 665,
        "y": 1176,
        "wires": [
            [
                "37291efb.819922"
            ]
        ]
    },
    {
        "id": "37291efb.819922",
        "type": "change",
        "z": "41f52341.96686c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 1176,
        "wires": [
            [
                "a415f07f.088b5"
            ]
        ]
    },
    {
        "id": "33ca5291.689b0e",
        "type": "ui_button",
        "z": "41f52341.96686c",
        "name": "",
        "group": "455ba55e.e91e8c",
        "order": 4,
        "width": "12",
        "height": "1",
        "passthru": false,
        "label": "Uppdatera",
        "tooltip": "Begär ny väderdata och uppdatera grafen med nya värden.",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 665,
        "y": 1120,
        "wires": [
            [
                "1a39ce8.60f2732"
            ]
        ]
    },
    {
        "id": "52ab9daa.b664d4",
        "type": "change",
        "z": "41f52341.96686c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.smhi.wind_factor_n",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 248,
        "y": 1092,
        "wires": [
            [
                "2ad75e0a.a1f242"
            ]
        ]
    },
    {
        "id": "6ddcbdd5.219ff4",
        "type": "change",
        "z": "41f52341.96686c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.smhi.wind_factor_s",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 248,
        "y": 1141,
        "wires": [
            [
                "35b9f0e2.9255f"
            ]
        ]
    },
    {
        "id": "c6ae1105.81695",
        "type": "change",
        "z": "41f52341.96686c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.smhi.wind_factor_w",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 248,
        "y": 1190,
        "wires": [
            [
                "e61e01fd.c9eff"
            ]
        ]
    },
    {
        "id": "c3c3d8d1.9e7f38",
        "type": "change",
        "z": "41f52341.96686c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.smhi.wind_factor_e",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 248,
        "y": 1239,
        "wires": [
            [
                "b548fa71.925bb8"
            ]
        ]
    },
    {
        "id": "c5e25a19.f7bca8",
        "type": "ui_template",
        "z": "41f52341.96686c",
        "group": "455ba55e.e91e8c",
        "name": "SMHI Vindfaktor Info",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "Ställ in en faktor för vindens påverkan på köldeffekten<br>\nVärdet 1 tar köldeffekten rakt av.<br>\nHöj/sänk faktorn om du vill ha större/mindre påverkan när det blåser från ett visst håll<br>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 345,
        "y": 1036,
        "wires": [
            []
        ]
    },
    {
        "id": "d1be4e85.69591",
        "type": "ui_template",
        "z": "41f52341.96686c",
        "group": "455ba55e.e91e8c",
        "name": "SMHI Riktning info",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "Riktning: Norr: -1, Söder: -2, Väst: -3, Öst: -4<br>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1028,
        "y": 1085,
        "wires": [
            []
        ]
    },
    {
        "id": "325d152b.e2013a",
        "type": "ui_switch",
        "z": "41f52341.96686c",
        "name": "",
        "label": "Solfaktor",
        "tooltip": "",
        "group": "d342c0ba.f2418",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "sun_active",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 683,
        "y": 714,
        "wires": [
            [
                "32ccf630.a0ca4a"
            ]
        ]
    },
    {
        "id": "52919989.823948",
        "type": "change",
        "z": "41f52341.96686c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.smhi.sun_active",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 507,
        "y": 707,
        "wires": [
            [
                "325d152b.e2013a",
                "20dcfb85.5d2164"
            ]
        ]
    },
    {
        "id": "20dcfb85.5d2164",
        "type": "change",
        "z": "41f52341.96686c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 409,
        "y": 938,
        "wires": [
            [
                "19aea50f.7a39db",
                "1e1590cd.2f8dbf",
                "619dd86a.08f0f8"
            ]
        ]
    },
    {
        "id": "2478c4e8.5705cc",
        "type": "ui_switch",
        "z": "41f52341.96686c",
        "name": "",
        "label": "Vindfaktor",
        "tooltip": "",
        "group": "455ba55e.e91e8c",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "wind_active",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 781,
        "y": 1267,
        "wires": [
            [
                "32ccf630.a0ca4a"
            ]
        ]
    },
    {
        "id": "f3c4f2b1.a45d7",
        "type": "change",
        "z": "41f52341.96686c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.smhi.wind_active",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 598,
        "y": 1267,
        "wires": [
            [
                "2478c4e8.5705cc",
                "9c52c098.40e78"
            ]
        ]
    },
    {
        "id": "9c52c098.40e78",
        "type": "change",
        "z": "41f52341.96686c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 486,
        "y": 1372,
        "wires": [
            [
                "2ad75e0a.a1f242",
                "35b9f0e2.9255f",
                "e61e01fd.c9eff",
                "b548fa71.925bb8"
            ]
        ]
    },
    {
        "id": "fc1f6629.6bf228",
        "type": "ui_slider",
        "z": "a7a0164d.f58e58",
        "name": "",
        "label": "Lufthastighet Låg Börvärde",
        "tooltip": "",
        "group": "ad7a33f3.24adf",
        "order": 4,
        "width": "11",
        "height": "1",
        "passthru": false,
        "outs": "end",
        "topic": "setpoint_low",
        "min": "0",
        "max": "350",
        "step": "1",
        "x": 750,
        "y": 728,
        "wires": [
            [
                "a775503.592a7b"
            ]
        ]
    },
    {
        "id": "89473eb3.9e903",
        "type": "change",
        "z": "a7a0164d.f58e58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.airflow.setpoint_low",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 423,
        "y": 462,
        "wires": [
            [
                "fc1f6629.6bf228"
            ]
        ]
    },
    {
        "id": "31d982bd.6bd72e",
        "type": "ui_switch",
        "z": "a7a0164d.f58e58",
        "name": "",
        "label": "Låg ventilation vid kompressorstopp",
        "tooltip": "",
        "group": "ad7a33f3.24adf",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "setpoint_low_active",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 756,
        "y": 623,
        "wires": [
            [
                "a775503.592a7b"
            ]
        ]
    },
    {
        "id": "48a2d02a.cd62e",
        "type": "change",
        "z": "a7a0164d.f58e58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.airflow.setpoint_low_active",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 416,
        "y": 504,
        "wires": [
            [
                "31d982bd.6bd72e",
                "9c7e2635.ed2368"
            ]
        ]
    },
    {
        "id": "9c7e2635.ed2368",
        "type": "change",
        "z": "a7a0164d.f58e58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 367,
        "y": 763,
        "wires": [
            [
                "fc1f6629.6bf228"
            ]
        ]
    },
    {
        "id": "68830a79.407d64",
        "type": "inject",
        "z": "a7a0164d.f58e58",
        "name": "Starta",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 134,
        "y": 133,
        "wires": [
            [
                "7e0ee3de.6e139c"
            ]
        ]
    },
    {
        "id": "7e0ee3de.6e139c",
        "type": "subflow:64327e50.8f365",
        "z": "a7a0164d.f58e58",
        "name": "Skrivläge",
        "x": 270,
        "y": 133,
        "wires": []
    },
    {
        "id": "bf99319c.d4c2c",
        "type": "change",
        "z": "a7a0164d.f58e58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.airflow.co2_active",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 542,
        "y": 861,
        "wires": [
            [
                "1bc9e3e0.e20b0c"
            ]
        ]
    },
    {
        "id": "1bc9e3e0.e20b0c",
        "type": "ui_switch",
        "z": "a7a0164d.f58e58",
        "name": "",
        "label": "CO2 Givare",
        "tooltip": "",
        "group": "ad7a33f3.24adf",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "co2_active",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 777,
        "y": 861,
        "wires": [
            [
                "d7e520e7.935bf",
                "3fee6d90.390fd2"
            ]
        ]
    },
    {
        "id": "d7e520e7.935bf",
        "type": "trigger",
        "z": "a7a0164d.f58e58",
        "op1": "",
        "op2": "false",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "60",
        "extend": true,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "name": "MQTT Sensor Timeout",
        "x": 514,
        "y": 1144,
        "wires": [
            [
                "51868d3c.02c9b4"
            ]
        ]
    },
    {
        "id": "51868d3c.02c9b4",
        "type": "function",
        "z": "a7a0164d.f58e58",
        "name": "",
        "func": "var config = global.get('config');\nif(config===undefined) { return; }\nif(msg.payload===false) {\n    if(config.plugins.airflow.co2_sensor!==undefined && config.plugins.airflow.co2_sensor===true) {\n        node.error('Lufthastighet',{topic:\"Lufthastighet\",payload:\"CO2 MQTT Givare har tappat kontakten.\"})\n    }\n    global.set('data.co2_sensor',undefined)\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 704,
        "y": 1144,
        "wires": [
            []
        ]
    },
    {
        "id": "4957499f.1ff778",
        "type": "inject",
        "z": "a7a0164d.f58e58",
        "name": "Uppstart",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "x": 254,
        "y": 1164,
        "wires": [
            [
                "d7e520e7.935bf"
            ]
        ]
    },
    {
        "id": "bcb19949.03f188",
        "type": "mqtt in",
        "z": "a7a0164d.f58e58",
        "name": "",
        "topic": "nibe/plugins/airflow/co2_sensor",
        "qos": "2",
        "datatype": "auto",
        "broker": "d7f6b34d.d13d6",
        "x": 240,
        "y": 1080,
        "wires": [
            [
                "790e2108.5c427",
                "46556d68.213964",
                "d7e520e7.935bf"
            ]
        ]
    },
    {
        "id": "46556d68.213964",
        "type": "function",
        "z": "a7a0164d.f58e58",
        "name": "",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined || data===undefined) return;\nif(config.plugins.airflow.co2_active!==undefined && config.plugins.airflow.co2_active===true) {\n    global.set('data.co2_sensor',String(msg.payload))\n    node.send({topic:'CO2 Värde',payload:msg.payload});\n    node.send({topic:'Gränsvärde',payload:800});\n} else {\n    global.set('data.co2_sensor',undefined)\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 575,
        "y": 1078,
        "wires": [
            [
                "d1eba932.145588"
            ]
        ]
    },
    {
        "id": "790e2108.5c427",
        "type": "debug",
        "z": "a7a0164d.f58e58",
        "name": "MQTT Sensor",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 500,
        "y": 980,
        "wires": []
    },
    {
        "id": "190f986d.7221f8",
        "type": "change",
        "z": "a7a0164d.f58e58",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.indoor.co2_topic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 542,
        "y": 903,
        "wires": [
            [
                "e15df6d6.6809a8"
            ]
        ]
    },
    {
        "id": "e15df6d6.6809a8",
        "type": "ui_text_input",
        "z": "a7a0164d.f58e58",
        "name": "MQTT Topic text",
        "label": "CO2 MQTT Topic",
        "tooltip": "",
        "group": "ad7a33f3.24adf",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "co2_topic",
        "x": 787,
        "y": 910,
        "wires": [
            [
                "3fee6d90.390fd2"
            ]
        ]
    },
    {
        "id": "3fee6d90.390fd2",
        "type": "function",
        "z": "a7a0164d.f58e58",
        "name": "",
        "func": "var config = global.get('config');\nif(config===undefined) return;\nif(config.plugins.airflow===undefined) {\n    config.plugins.airflow = {};\n}\n    config.plugins.airflow[msg.topic] = msg.payload;\n\nmsg.topic = \"nibe/config/set\"\nmsg.payload = JSON.stringify(config);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 953,
        "y": 882,
        "wires": [
            [
                "35eec4bf.33610c"
            ]
        ]
    },
    {
        "id": "56c8f9cb.aeaef8",
        "type": "catch",
        "z": "a7a0164d.f58e58",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 858,
        "y": 98,
        "wires": [
            [
                "de5f6812.a35428",
                "81d723c0.768a"
            ]
        ]
    },
    {
        "id": "81d723c0.768a",
        "type": "debug",
        "z": "a7a0164d.f58e58",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 998,
        "y": 158,
        "wires": []
    },
    {
        "id": "de5f6812.a35428",
        "type": "ui_toast",
        "z": "a7a0164d.f58e58",
        "position": "bottom right",
        "displayTime": "7",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "",
        "x": 1108,
        "y": 98,
        "wires": []
    },
    {
        "id": "35eec4bf.33610c",
        "type": "mqtt out",
        "z": "a7a0164d.f58e58",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "d7f6b34d.d13d6",
        "x": 1114,
        "y": 882,
        "wires": []
    },
    {
        "id": "449c1f6b.86b58",
        "type": "http request",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "https://raw.githubusercontent.com/bebben88/NibePi/master/nibepi/models/VVM225.json",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 917,
        "y": 3206,
        "wires": [
            [
                "d1fc039e.ecb4d"
            ]
        ]
    },
    {
        "id": "d1fc039e.ecb4d",
        "type": "file",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/models/VVM225.json",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 1165,
        "y": 3206,
        "wires": [
            [
                "fa90672f.41a5c8"
            ]
        ]
    },
    {
        "id": "327d2fe7.fd3e9",
        "type": "file in",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/models/VVM225.json",
        "format": "utf8",
        "chunk": false,
        "sendError": true,
        "encoding": "none",
        "x": 325,
        "y": 3206,
        "wires": [
            [
                "317c9840.35c308"
            ]
        ]
    },
    {
        "id": "f8fe2e8f.adf41",
        "type": "inject",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "x": 126,
        "y": 3038,
        "wires": [
            [
                "92696de5.62776"
            ]
        ]
    },
    {
        "id": "317c9840.35c308",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 547,
        "y": 3206,
        "wires": [
            [
                "50ca2446.e9453c"
            ],
            [
                "fa90672f.41a5c8"
            ]
        ]
    },
    {
        "id": "9e98a1eb.868",
        "type": "http request",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "https://raw.githubusercontent.com/bebben88/NibePi/master/nibepi/models/VVM310.json",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 917,
        "y": 3262,
        "wires": [
            [
                "3748f542.fb33ca"
            ]
        ]
    },
    {
        "id": "3748f542.fb33ca",
        "type": "file",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/models/VVM310.json",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 1165,
        "y": 3262,
        "wires": [
            [
                "f098085f.a53998"
            ]
        ]
    },
    {
        "id": "fa90672f.41a5c8",
        "type": "file in",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/models/VVM310.json",
        "format": "utf8",
        "chunk": false,
        "sendError": true,
        "encoding": "none",
        "x": 325,
        "y": 3262,
        "wires": [
            [
                "c6a3d68e.38c868"
            ]
        ]
    },
    {
        "id": "c6a3d68e.38c868",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 547,
        "y": 3262,
        "wires": [
            [
                "f2672897.c90058"
            ],
            [
                "f098085f.a53998"
            ]
        ]
    },
    {
        "id": "4583cd7f.2cc774",
        "type": "http request",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "https://raw.githubusercontent.com/bebben88/NibePi/master/nibepi/models/VVM320.json",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 917,
        "y": 3318,
        "wires": [
            [
                "64cd8a3b.49a3a4"
            ]
        ]
    },
    {
        "id": "64cd8a3b.49a3a4",
        "type": "file",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/models/VVM320.json",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 1165,
        "y": 3318,
        "wires": [
            [
                "c77544a5.816a88"
            ]
        ]
    },
    {
        "id": "f098085f.a53998",
        "type": "file in",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/models/VVM320.json",
        "format": "utf8",
        "chunk": false,
        "sendError": true,
        "encoding": "none",
        "x": 325,
        "y": 3318,
        "wires": [
            [
                "4a44e145.a5326"
            ]
        ]
    },
    {
        "id": "4a44e145.a5326",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 547,
        "y": 3318,
        "wires": [
            [
                "bf1fa004.159ea"
            ],
            [
                "c77544a5.816a88"
            ]
        ]
    },
    {
        "id": "3757a6cc.3938ea",
        "type": "http request",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "https://raw.githubusercontent.com/bebben88/NibePi/master/nibepi/models/VVM325.json",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 917,
        "y": 3367,
        "wires": [
            [
                "1d8c3cc2.20ff53"
            ]
        ]
    },
    {
        "id": "1d8c3cc2.20ff53",
        "type": "file",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/models/VVM325.json",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 1165,
        "y": 3367,
        "wires": [
            [
                "835b62fb.95c2c"
            ]
        ]
    },
    {
        "id": "c77544a5.816a88",
        "type": "file in",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/models/VVM325.json",
        "format": "utf8",
        "chunk": false,
        "sendError": true,
        "encoding": "none",
        "x": 325,
        "y": 3367,
        "wires": [
            [
                "e5d57ca5.fcde6"
            ]
        ]
    },
    {
        "id": "e5d57ca5.fcde6",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 547,
        "y": 3367,
        "wires": [
            [
                "10c8c78d.98c0f8"
            ],
            [
                "835b62fb.95c2c"
            ]
        ]
    },
    {
        "id": "a600b667.6373c8",
        "type": "http request",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "https://raw.githubusercontent.com/bebben88/NibePi/master/nibepi/models/VVM500.json",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 917,
        "y": 3423,
        "wires": [
            [
                "4d3d1e1e.84ad1"
            ]
        ]
    },
    {
        "id": "4d3d1e1e.84ad1",
        "type": "file",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/models/VVM500.json",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 1165,
        "y": 3423,
        "wires": [
            [
                "c010b83.76a7148"
            ]
        ]
    },
    {
        "id": "835b62fb.95c2c",
        "type": "file in",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/models/VVM500.json",
        "format": "utf8",
        "chunk": false,
        "sendError": true,
        "encoding": "none",
        "x": 325,
        "y": 3423,
        "wires": [
            [
                "8dd31ae2.1a4918"
            ]
        ]
    },
    {
        "id": "8dd31ae2.1a4918",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 547,
        "y": 3423,
        "wires": [
            [
                "b2ff3e21.fc829"
            ],
            [
                "c010b83.76a7148"
            ]
        ]
    },
    {
        "id": "14473112.dec0ef",
        "type": "function",
        "z": "7f0122f1.22d60c",
        "name": "",
        "func": "var config = global.get('config');\nif(config===undefined) { return; }\nif(config.plugins.airflow===undefined || config.plugins.airflow.active===false) {\n    return;\n}\n\nif(msg.topic==(config.defaultTopic+\"40050\")) {\nvar setpoint = config.plugins.airflow.setpoint;\nvar data = global.get('data');\nif(data[40050]===undefined || data[47265]===undefined || data[40026]===undefined || data[45001]===undefined) { return; }\nvar flow = Number(data[40050]);\nvar alarm = data[45001];\nvar fan = Number(data[47265]);\nvar temp = Number(data[40026]);\nif(alarm==\"Avfrostning\") {\n    // Dont regulate when defrosting\n    return;\n} else if(temp<0) {\n    // Dont regulate when the vented air is below 0\n    return;\n}\nif(flow>(setpoint+10)) {\n    node.send({topic:config.defaultTopic+47265+\"/set\",payload:fan-1});\n} else if(flow<(setpoint-10)) {\n    node.send({topic:config.defaultTopic+47265+\"/set\",payload:fan+1});\n} else {\n    // Normal flow\n}\n\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 203,
        "wires": [
            [
                "4e19756d.216fec",
                "ec69fce1.46a63"
            ]
        ]
    },
    {
        "id": "ec69fce1.46a63",
        "type": "mqtt out",
        "z": "7f0122f1.22d60c",
        "name": "",
        "topic": "",
        "qos": "2",
        "retain": "false",
        "broker": "54c90e3b.c2a5f",
        "x": 569,
        "y": 203,
        "wires": []
    },
    {
        "id": "4e19756d.216fec",
        "type": "debug",
        "z": "7f0122f1.22d60c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 589,
        "y": 154,
        "wires": []
    },
    {
        "id": "27cb130c.4fcc3c",
        "type": "mqtt in",
        "z": "7f0122f1.22d60c",
        "name": "",
        "topic": "#",
        "qos": "2",
        "broker": "54c90e3b.c2a5f",
        "x": 233,
        "y": 161,
        "wires": [
            [
                "14473112.dec0ef",
                "6c61de0b.fab73"
            ]
        ]
    },
    {
        "id": "6c61de0b.fab73",
        "type": "debug",
        "z": "7f0122f1.22d60c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 428,
        "y": 105,
        "wires": []
    },
    {
        "id": "9303e7b1.bf1b08",
        "type": "mqtt in",
        "z": "7f0122f1.22d60c",
        "name": "",
        "topic": "nibe/config",
        "qos": "2",
        "broker": "54c90e3b.c2a5f",
        "x": 124,
        "y": 301,
        "wires": [
            [
                "908432e0.3c65b"
            ]
        ]
    },
    {
        "id": "908432e0.3c65b",
        "type": "json",
        "z": "7f0122f1.22d60c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 261,
        "y": 301,
        "wires": [
            [
                "87fc4b09.6f42b8",
                "28aa772b.3b9a28",
                "847df127.8f8ff"
            ]
        ]
    },
    {
        "id": "87fc4b09.6f42b8",
        "type": "change",
        "z": "7f0122f1.22d60c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.airflow.active",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 417,
        "y": 301,
        "wires": [
            [
                "debdc00d.b0e16",
                "5d26f844.bb1f88",
                "578093b1.8c1c6c",
                "1065652d.bc493b"
            ]
        ]
    },
    {
        "id": "65e982e5.bdf7cc",
        "type": "function",
        "z": "7f0122f1.22d60c",
        "name": "",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined || data===undefined) return;\nif(msg.topic!=\"mqtt\"){\nif(config.plugins[msg.topic]===undefined) {\n    config.plugins[msg.topic] = {};\n}\n}\nif(msg.topic==\"mqtt\") {\n    config[msg.topic].active = msg.payload;\n} else {\n    config.plugins[msg.topic].active = msg.payload;\n}\n\nmsg.topic = \"nibe/config/set\"\nmsg.payload = JSON.stringify(config);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 842,
        "y": 301,
        "wires": [
            [
                "ea189810.302938"
            ]
        ]
    },
    {
        "id": "ea189810.302938",
        "type": "mqtt out",
        "z": "7f0122f1.22d60c",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "54c90e3b.c2a5f",
        "x": 982,
        "y": 301,
        "wires": []
    },
    {
        "id": "578093b1.8c1c6c",
        "type": "change",
        "z": "7f0122f1.22d60c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 641,
        "y": 371,
        "wires": [
            [
                "c3b73c1b.1c458"
            ]
        ]
    },
    {
        "id": "28aa772b.3b9a28",
        "type": "change",
        "z": "7f0122f1.22d60c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.airflow.setpoint",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 379,
        "y": 357,
        "wires": [
            [
                "c3b73c1b.1c458",
                "c81f068f.f086e8"
            ]
        ]
    },
    {
        "id": "5d26f844.bb1f88",
        "type": "function",
        "z": "7f0122f1.22d60c",
        "name": "",
        "func": "var config = global.get('config');\nvar data = global.get('data');\nif(config===undefined || data===undefined) return;\nif(config.plugins.airflow.active!==true) return;\nif(msg.topic==config.defaultTopic+\"47265\") {\n    node.send([null,null,{payload:msg.payload}]);\n}\nif(msg.topic==\"nibe/config\" || msg.topic==config.defaultTopic+\"40050\" || msg.topic==\"airflow\") {\n    if(config.plugins.airflow===undefined) {\n        config.plugins.airflow = {};\n    }\n    var flow = data[40050]||getData(40050);\n    node.send([null,{payload:flow}]);\n    if(config.plugins.airflow.active===true && config.plugins.airflow.setpoint===0) {\n    config.plugins.airflow.setpoint = Number(flow);\n    msg.topic = \"nibe/config/set\"\n    msg.payload = JSON.stringify(config);\n    return msg;\n} else if(msg.topic==\"airflow\") {\n    config.plugins.airflow.setpoint = msg.payload;\n    msg.topic = \"nibe/config/set\"\n    msg.payload = JSON.stringify(config);\n    return msg;\n}\n} else if(msg.topic==config.defaultTopic+\"40026\") {\n    node.send([null,null,null,{topic:\"Avluftstemperatur\",payload:msg.payload}])\n} else if(msg.topic==config.defaultTopic+\"43136\") {\n    node.send([null,null,null,{topic:\"Kompressorfrekvens\",payload:msg.payload}])\n}\n\nfunction getData(data) {\n    msg.topic = config.defaultTopic+data+\"/get\";\n    msg.payload = true;\n    return msg;\n}",
        "outputs": 4,
        "noerr": 0,
        "x": 1017,
        "y": 399,
        "wires": [
            [
                "ea189810.302938"
            ],
            [
                "2e810c67.e97c74",
                "c1df6445.e297b8"
            ],
            [
                "a644dc97.3ef01",
                "4e1c77c6.65d9b8"
            ],
            [
                "16f5c53d.49ad3b"
            ]
        ]
    },
    {
        "id": "4ad1047f.70927c",
        "type": "mqtt in",
        "z": "7f0122f1.22d60c",
        "name": "",
        "topic": "#",
        "qos": "2",
        "datatype": "auto",
        "broker": "54c90e3b.c2a5f",
        "x": 863,
        "y": 399,
        "wires": [
            [
                "5d26f844.bb1f88"
            ]
        ]
    },
    {
        "id": "847df127.8f8ff",
        "type": "change",
        "z": "7f0122f1.22d60c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.plugins.airflow.enable",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 417,
        "y": 259,
        "wires": [
            [
                "8e179081.e7edc",
                "6d1abecf.749a3"
            ]
        ]
    },
    {
        "id": "8e179081.e7edc",
        "type": "change",
        "z": "7f0122f1.22d60c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 606,
        "y": 259,
        "wires": [
            [
                "debdc00d.b0e16",
                "c3b73c1b.1c458"
            ]
        ]
    },
    {
        "id": "6d1abecf.749a3",
        "type": "debug",
        "z": "7f0122f1.22d60c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 568,
        "y": 434,
        "wires": []
    },
    {
        "id": "c1df6445.e297b8",
        "type": "change",
        "z": "7f0122f1.22d60c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Ärvärde",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1009,
        "y": 537,
        "wires": [
            [
                "16f5c53d.49ad3b"
            ]
        ]
    },
    {
        "id": "4e1c77c6.65d9b8",
        "type": "change",
        "z": "7f0122f1.22d60c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Fläkthastighet",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1009,
        "y": 577,
        "wires": [
            [
                "16f5c53d.49ad3b"
            ]
        ]
    },
    {
        "id": "c81f068f.f086e8",
        "type": "change",
        "z": "7f0122f1.22d60c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Börvärde",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1009,
        "y": 497,
        "wires": [
            [
                "16f5c53d.49ad3b"
            ]
        ]
    },
    {
        "id": "1065652d.bc493b",
        "type": "change",
        "z": "7f0122f1.22d60c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 759,
        "y": 497,
        "wires": [
            [
                "16f5c53d.49ad3b"
            ]
        ]
    },
    {
        "id": "debdc00d.b0e16",
        "type": "ui_switch",
        "z": "7f0122f1.22d60c",
        "name": "",
        "label": "Automatisk lufthastighet",
        "tooltip": "",
        "group": "1409f0ed.f2d6cf",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "airflow",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 650,
        "y": 301,
        "wires": [
            [
                "65e982e5.bdf7cc"
            ]
        ]
    },
    {
        "id": "c3b73c1b.1c458",
        "type": "ui_slider",
        "z": "7f0122f1.22d60c",
        "name": "",
        "label": "Lufthastighet börvärde",
        "tooltip": "",
        "group": "1409f0ed.f2d6cf",
        "order": 2,
        "width": "11",
        "height": "1",
        "passthru": false,
        "outs": "end",
        "topic": "airflow",
        "min": "0",
        "max": "350",
        "step": "1",
        "x": 850,
        "y": 343,
        "wires": [
            [
                "5d26f844.bb1f88"
            ]
        ]
    },
    {
        "id": "2e810c67.e97c74",
        "type": "ui_text",
        "z": "7f0122f1.22d60c",
        "group": "1409f0ed.f2d6cf",
        "order": 3,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Ärvärde",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 1219,
        "y": 357,
        "wires": []
    },
    {
        "id": "a644dc97.3ef01",
        "type": "ui_text",
        "z": "7f0122f1.22d60c",
        "group": "1409f0ed.f2d6cf",
        "order": 4,
        "width": "4",
        "height": "1",
        "name": "",
        "label": "Fläkthastighet",
        "format": "{{msg.payload}}%",
        "layout": "row-left",
        "x": 1219,
        "y": 437,
        "wires": []
    },
    {
        "id": "16f5c53d.49ad3b",
        "type": "ui_chart",
        "z": "7f0122f1.22d60c",
        "name": "",
        "group": "1409f0ed.f2d6cf",
        "order": 5,
        "width": "0",
        "height": "0",
        "label": "Lufthastighet",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 1209,
        "y": 537,
        "wires": [
            []
        ]
    },
    {
        "id": "92696de5.62776",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "sudo mount -o remount,rw /",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 372,
        "y": 3038,
        "wires": [
            [],
            [],
            [
                "f174a918.36ccd8"
            ]
        ]
    },
    {
        "id": "f174a918.36ccd8",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 582,
        "y": 3038,
        "wires": [
            [
                "aadd6802.49ef28"
            ]
        ]
    },
    {
        "id": "c010b83.76a7148",
        "type": "exec",
        "z": "ade2c7a9.e97ba8",
        "command": "sudo mount -o remount,ro /",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 764,
        "y": 3486,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "50ca2446.e9453c",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "error",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 724,
        "y": 3206,
        "wires": [
            [
                "449c1f6b.86b58"
            ]
        ]
    },
    {
        "id": "f2672897.c90058",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "error",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 724,
        "y": 3262,
        "wires": [
            [
                "9e98a1eb.868"
            ]
        ]
    },
    {
        "id": "bf1fa004.159ea",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "error",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 724,
        "y": 3318,
        "wires": [
            [
                "4583cd7f.2cc774"
            ]
        ]
    },
    {
        "id": "10c8c78d.98c0f8",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "error",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 724,
        "y": 3367,
        "wires": [
            [
                "3757a6cc.3938ea"
            ]
        ]
    },
    {
        "id": "b2ff3e21.fc829",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "error",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 724,
        "y": 3423,
        "wires": [
            [
                "a600b667.6373c8"
            ]
        ]
    },
    {
        "id": "4a4c6a1b.17abe4",
        "type": "http request",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "https://raw.githubusercontent.com/bebben88/NibePi/master/nibepi/models/F1355.json",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 917,
        "y": 3150,
        "wires": [
            [
                "9285b70c.d765d8"
            ]
        ]
    },
    {
        "id": "9285b70c.d765d8",
        "type": "file",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/models/F1355.json",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 1155,
        "y": 3150,
        "wires": [
            [
                "327d2fe7.fd3e9"
            ]
        ]
    },
    {
        "id": "3d801bcb.55d514",
        "type": "file in",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/models/F1355.json",
        "format": "utf8",
        "chunk": false,
        "sendError": true,
        "encoding": "none",
        "x": 315,
        "y": 3150,
        "wires": [
            [
                "731eb5b8.c37f2c"
            ]
        ]
    },
    {
        "id": "731eb5b8.c37f2c",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 547,
        "y": 3150,
        "wires": [
            [
                "9689b3b0.97eb7"
            ],
            [
                "327d2fe7.fd3e9"
            ]
        ]
    },
    {
        "id": "9689b3b0.97eb7",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "error",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 724,
        "y": 3150,
        "wires": [
            [
                "4a4c6a1b.17abe4"
            ]
        ]
    },
    {
        "id": "2f261ed0.bfc192",
        "type": "http request",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "https://raw.githubusercontent.com/bebben88/NibePi/master/nibepi/models/F1345.json",
        "tls": "",
        "proxy": "",
        "authType": "",
        "x": 917,
        "y": 3094,
        "wires": [
            [
                "850145b6.865e88"
            ]
        ]
    },
    {
        "id": "850145b6.865e88",
        "type": "file",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/models/F1345.json",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 1155,
        "y": 3094,
        "wires": [
            [
                "3d801bcb.55d514"
            ]
        ]
    },
    {
        "id": "aadd6802.49ef28",
        "type": "file in",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "filename": "/home/pi/.nibepi/models/F1345.json",
        "format": "utf8",
        "chunk": false,
        "sendError": true,
        "encoding": "none",
        "x": 315,
        "y": 3094,
        "wires": [
            [
                "2cf50207.257bde"
            ]
        ]
    },
    {
        "id": "2cf50207.257bde",
        "type": "switch",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 547,
        "y": 3094,
        "wires": [
            [
                "240c5145.24e45e"
            ],
            [
                "3d801bcb.55d514"
            ]
        ]
    },
    {
        "id": "240c5145.24e45e",
        "type": "change",
        "z": "ade2c7a9.e97ba8",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "error",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 724,
        "y": 3094,
        "wires": [
            [
                "2f261ed0.bfc192"
            ]
        ]
    }
]
